{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/94",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/94/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/94/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/94/events",
  "html_url":"https://github.com/athensresearch/athens/issues/94",
  "id":626043279,
  "node_id":"MDU6SXNzdWU2MjYwNDMyNzk=",
  "number":94,
  "title":"Parser",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[
    {
      "id":2092478123,
      "node_id":"MDU6TGFiZWwyMDkyNDc4MTIz",
      "url":"https://api.github.com/repos/athensresearch/athens/labels/type:%20%F0%9F%9A%80%20feature",
      "name":"type: üöÄ feature",
      "color":"0075ca",
      "default":false,
      "description":"Must be on https://github.com/athensresearch/athens/projects/2"
    }
  ],
  "state":"open",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-05-27 21:26:48 UTC",
  "updated_at":"2020-07-27 23:39:43 UTC",
  "closed_at":null,
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "body":"This feature is for parsing block-level syntax ‚Äì e.g. `‚Ä¢ here is [[a link]]` ‚Äì and rendering it to the correct HTML via Hiccup.\r\n\r\nWe use the [instaparse](https://github.com/Engelberg/instaparse) library.\r\n\r\nThis file may be useful for nested links: https://github.com/athensresearch/athens/blob/master/data/nested-link.hiccup\r\n\r\n\r\n#5 \r\n#25 \r\n#44 ",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/640347344",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-640347344",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":640347344,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0MDM0NzM0NA==",
      "user":{
        "login":"roryokane",
        "id":79168,
        "node_id":"MDQ6VXNlcjc5MTY4",
        "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/roryokane",
        "html_url":"https://github.com/roryokane",
        "followers_url":"https://api.github.com/users/roryokane/followers",
        "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
        "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
        "organizations_url":"https://api.github.com/users/roryokane/orgs",
        "repos_url":"https://api.github.com/users/roryokane/repos",
        "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
        "received_events_url":"https://api.github.com/users/roryokane/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-08 03:45:51 UTC",
      "updated_at":"2020-07-27 23:39:43 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"My current knowledge of what needs to be done:\r\n\r\n## Exploratory tasks\r\n\r\n- [X] Interpret unknown syntax as regular text, not a parse error (#44)\r\n- [X] Basic parsing of links\r\n- [X] Figure out how to parse backslash-escaped characters\r\n    - The `url-link` rule shows how to do this.\r\n- [X] Figure out how to parse nested formatting\r\n    - The `bold` rule shows how to do this.\r\n- [ ] Figure out whether a way to convert parsed ASTs back to markup¬†is necessary, and how to design it if so (related to #44)\r\n    - [As discussed on Discord][Discord-page-rename-parser], updating page links (`[[foo]]`) after a page rename currently uses `patterns.cljc`. I see that the regexes in `patterns.cljc` will fail in some cases, so ideally the parser could be used to find and replace page link targets. Note that this use-case wouldn‚Äôt necessarily require being able to serialize all AST nodes, only AST nodes that could be within page links.\r\n    - One of my two ideas for parsing nested links (#5) would require this feature. If the other idea is used, it wouldn‚Äôt be required.\r\n    - This could cause problems in one of these two ways, depending on the implementation:\r\n        - The parse tree might have to remember which syntax was used to construct a given meaning, e.g. `#foo` vs. `#[[foo]]` and `\\(a\\)` vs. `(a)` in a URL. This would complicate the parser.\r\n        - The serialization might just arbitrarily choose one of the possible syntaxes, causing the user‚Äôs markup to be reformatted. The markup would render the same but have different raw text from what the user inputted. This has potential to go wrong if the user types a syntax error that would auto-format away the wrong parts of their syntax.\r\n- [ ] Figure out whether we need to pass the `:start-index` and `:end-index` of each parse rule all the way through each transformation to the final AST, and how to design it if so.\r\n    - [As discussed on Discord][Discord-place-cursor-parser], this might be necessary to place the text cursor at the point of the clicked text when converting a rendered block into a `textarea` after a click.\r\n- [x] Parse nested links (#5)\r\n    - Example Hiccup output: `data/nested-link.hiccup`\r\n    - I see that Roam is missing a feature regarding this: it doesn‚Äôt highlight which link you will click when you hover. Can that be implemented with the Hiccup output above, or will we need a different structure?\r\n    - Is there any way to trick the browser into using a non-nested `a` element to do the link-hover style change and link-click page change, so we don‚Äôt have to reimplement that in JavaScript?\r\n- [ ] Compile a list of all markup syntax Roam supports\r\n    - Roam has the Help popup in the bottom right and also the [Help database](https://roamresearch.com/#/app/help/page/1308). But neither of them mentions all syntax: in a Roam user‚Äôs YouTube video, as well as in the Athens example database, I saw undocumented syntax `foo::` that turns into ‚Äú**foo:**‚Äù. Research: is there other undocumented syntax like this?\r\n\r\n[Discord-page-rename-parser]: https://discord.com/channels/708122962422792194/714190075843313754/718162819635478548\r\n[Discord-place-cursor-parser]: https://discord.com/channels/708122962422792194/714190075843313754/718490640345727108\r\n\r\n## Straightforward tasks\r\n\r\n### Implement known syntaxes\r\n\r\nI think these tasks should not be attempted until most of the exploratory tasks are done, because some of those exploratory tasks would require writing new code for every rule, and those tasks would be more tedious if more rules had to be accounted for at that time.\r\n\r\nFor each of these syntaxes:\r\n\r\n1. Research Roam‚Äôs handling of edge cases by writing sample text in Roam\r\n2. Decide on Athen‚Äôs desired handling, possibly taking cues from other markup syntaxes like [CommonMark](https://spec.commonmark.org/0.29/)\r\n3. Implement the parsing and initial transformation in `parser.cljc`. Remember to update any other parser rules that allow the new syntax to be nested inside it.\r\n4. Write tests for that rule in `parser_test.cljc`.\r\n5. Implement rendering of that markup as Hiccup in `parse_renderer.cljs`.\r\n\r\n- [ ] block embeds: `{{[[embed]]: ((3AJ0dXKyE))}}`\r\n    1. [ ] parsing only\r\n    2. [ ] rendering the embedded block\r\n- [x] `![image](http://example.com/foo.jpg)` syntax (#25)\r\n- [X] `**bold**` syntax\r\n- [ ] `__italics__` syntax\r\n    - Will be implemented similarly to bold.\r\n    - Something I was thinking about and didn‚Äôt bring up for discussion yet: would we rather eventually implement Markdown-compatible syntax, so italics would be `_this_` and `*this*`? If so, should we implement Roam-compatible syntax now and write a converter later, or are there few enough Roam users that we can start with Markdown-compatible syntax?\r\n- [ ] `~~strikethrough~~` syntax\r\n    - Will be implemented similarly to bold.\r\n- [ ] `^^highlight^^` syntax\r\n    - Will be implemented similarly to bold.\r\n- [x] `` `code` `` syntax\r\n    - Won‚Äôt allow nested syntax. But figure out how `` ` `` escaping works, if it‚Äôs supported.\r\n- [ ] ```` ```code block``` ```` syntax\r\n    - In Markdown, the text on the same line as the first ```` ``` ```` is a language identifier, but in Roam, it‚Äôs the first line of the code. Implement Roam syntax to start with since it‚Äôs slightly easier, but what‚Äôs our long-term plan?\r\n- [ ] `$$LaTeX$$` syntax\r\n    1. [ ] Parsing text between the `$$` delimiters\r\n    2. [ ] Integrating a LaTeX library to format the contents\r\n- [ ] `header::` syntax\r\n    - This syntax is undocumented in Roam‚Äôs help.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/640863780",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-640863780",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":640863780,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0MDg2Mzc4MA==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-08 20:19:12 UTC",
      "updated_at":"2020-06-08 20:36:20 UTC",
      "author_association":"MEMBER",
      "body":"Thanks for collecting all these thoughts together @roryokane.\r\n\r\nBefore I respond to your comments, my first question is: what are your thoughts on putting tests cases or examples in Devcards?\r\n\r\nWe need not actually do [unit tests](http://rigsomelight.com/devcards/#!/devdemos.testing), and of course, the parser should still be `cljc`, but it would be easier for me to reason about example cases if I could visually identify things like markup and links  _in addition_ to the string inputs and hiccup outputs.\r\n\r\nIn general, I'm having some difficulty making mental models for these parsing problems, especially for the two ideas regarding nested links: remembering vs reconstructing source text. I believe your explanations are good, but parsing is just kind of an abstract subject to me. End-user output would be more user-friendly, and I think it would encourage others to start thinking about these tricky parsing problems!\r\n\r\nLastly, I think ultimately the designers will need to design things like nested and bolded links, bolded and highlighted text, and tranclusions of nested, bolded, highlighted, italicized text! It might be useful to use Devcards in the development of the parser, not just at the end üòÑ \r\n\r\n---\r\n\r\n> I see that Roam is missing a feature regarding this: it doesn‚Äôt highlight which link you will click when you hover. Can that be implemented with the Hiccup output above, or will we need a different structure?\r\n\r\nIn Roam's case, the inner link is contained within a link class. Inner links can thus be distinguished by custom CSS. So if we have a similar DOM and CSS class setup, our designers can handle this UX.\r\n\r\n**Can't distinguish with default CSS**\r\n![Screen Shot 2020-06-08 at 3 14 23 PM](https://user-images.githubusercontent.com/8952138/84070835-bed66200-a99a-11ea-8895-86163405742b.png)\r\n\r\n**But with custom CSS you can easily detect the inner link**\r\n![Screen Shot 2020-06-08 at 3 16 02 PM](https://user-images.githubusercontent.com/8952138/84070964-f9d89580-a99a-11ea-9da0-8591703ce3e2.png)\r\n\r\n---\r\n\r\n> should we implement Roam-compatible syntax now and write a converter later, or are there few enough Roam users that we can start with Markdown-compatible syntax?\r\n\r\nWe can always worry about converting and accreting later. Basically using the same logic you pose here:\r\n\r\n> I think these tasks should not be attempted until most of the exploratory tasks are done, because some of those exploratory tasks would require writing new code for every rule, and those tasks would be more tedious if more rules had to be accounted for at that time.\r\n\r\n---\r\n\r\n> In Markdown, the text on the same line as the first ``` is a language identifier, but in Roam, it‚Äôs the first line of the code. Implement Roam syntax to start with since it‚Äôs slightly easier, but what‚Äôs our long-term plan?\r\n\r\nShort-term, maybe all we do is syntax highlighting Roam or Markdown style.\r\n\r\nLong-term, I know I would like a REPL experience, where Athens replaces Emacs/VS Code and we can run arbitrary code in code blocks. We already have `sci` and `datascript` boxes :). But this is kind of v2 stuff.\r\n\r\n---\r\n\r\n>  header:: syntax\r\n\r\nThis is easy to implement on the parser side, but not on the [Datascript](https://www.notion.so/athensresearch/Datascript-Attribute-Table-afd0e5c9556b404880a0b149f87e9d6d?p=8dd4b283ba434306bc373c004da56bcb), so maybe not a huge priority.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/644391344",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-644391344",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":644391344,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0NDM5MTM0NA==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-15 21:08:49 UTC",
      "updated_at":"2020-06-15 21:08:58 UTC",
      "author_association":"MEMBER",
      "body":"Added basic devcards in #151, viewable at https://athensresearch.github.io/athens/cards.html#!/athens.devcards.parser",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/648400925",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-648400925",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":648400925,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0ODQwMDkyNQ==",
      "user":{
        "login":"roryokane",
        "id":79168,
        "node_id":"MDQ6VXNlcjc5MTY4",
        "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/roryokane",
        "html_url":"https://github.com/roryokane",
        "followers_url":"https://api.github.com/users/roryokane/followers",
        "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
        "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
        "organizations_url":"https://api.github.com/users/roryokane/orgs",
        "repos_url":"https://api.github.com/users/roryokane/repos",
        "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
        "received_events_url":"https://api.github.com/users/roryokane/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-23 20:30:19 UTC",
      "updated_at":"2020-06-23 20:30:19 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"I found this page that attempts to document Roam‚Äôs syntax: [roam-tricks ‚Äì Roam Shortcodes](https://roamresearch.com/#/app/roam-tricks/page/OE16pbHJn). Some of the syntaxes described there I hadn‚Äôt been aware of:\r\n\r\n- `[alias]([[link]])` ‚Äì a combination of the syntaxes that Athens currently calls `url-link` and `page-link`\r\n- `{{foo}}` codes\r\n    - Each individual template, such as `{{e}}`, `{{iframe: URL}}`, or `{{[[DONE]]}}`, should have its own parsing logic so that it can capture the arguments it needs.\r\n- `:` codes\r\n    - `:diagram`\r\n    - `:hiccup` (e.g. `:hiccup[:code 'code']`)\r\n\r\nI also learned of [RoamTutorial ‚Äì¬†Secret & Advanced Features](https://roamresearch.com/#/app/RoamTutorial/page/JL5FBky0c), which doesn‚Äôt reveal any syntaxes the other page doesn‚Äôt also include, but does go into more detail on how they are supposed to be rendered.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/648415696",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-648415696",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":648415696,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0ODQxNTY5Ng==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-23 20:58:46 UTC",
      "updated_at":"2020-06-23 20:58:59 UTC",
      "author_association":"MEMBER",
      "body":"Alias is pretty cool. `{{[[TODO]]}}` and `{{[[DONE]]}}` are pretty important. `:hiccup` we can probably support quite easily with https://athensresearch.github.io/athens/cards.html#!/athens.devcards.sci_boxes by @tomisme !",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/660564045",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-660564045",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":660564045,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU2NDA0NQ==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-19 00:40:21 UTC",
      "updated_at":"2020-07-19 00:40:21 UTC",
      "author_association":"MEMBER",
      "body":"Writing this so I don't forget: recursive block refs lead to stack overflow and app freezes. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/662006595",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-662006595",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":662006595,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2MjAwNjU5NQ==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-21 17:41:17 UTC",
      "updated_at":"2020-07-21 17:41:17 UTC",
      "author_association":"MEMBER",
      "body":"We also want to auto-create pages with `#` and `#[[]]` @HaojiXu ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/662816237",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-662816237",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":662816237,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2MjgxNjIzNw==",
      "user":{
        "login":"HaojiXu",
        "id":29003511,
        "node_id":"MDQ6VXNlcjI5MDAzNTEx",
        "avatar_url":"https://avatars3.githubusercontent.com/u/29003511?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/HaojiXu",
        "html_url":"https://github.com/HaojiXu",
        "followers_url":"https://api.github.com/users/HaojiXu/followers",
        "following_url":"https://api.github.com/users/HaojiXu/following{/other_user}",
        "gists_url":"https://api.github.com/users/HaojiXu/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/HaojiXu/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/HaojiXu/subscriptions",
        "organizations_url":"https://api.github.com/users/HaojiXu/orgs",
        "repos_url":"https://api.github.com/users/HaojiXu/repos",
        "events_url":"https://api.github.com/users/HaojiXu/events{/privacy}",
        "received_events_url":"https://api.github.com/users/HaojiXu/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-23 04:46:09 UTC",
      "updated_at":"2020-07-23 04:46:09 UTC",
      "author_association":"MEMBER",
      "body":"Related: <https://github.com/athensresearch/athens/issues/44#issuecomment-636139109>",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/662969473",
      "html_url":"https://github.com/athensresearch/athens/issues/94#issuecomment-662969473",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/94",
      "id":662969473,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjk2OTQ3Mw==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-23 12:07:17 UTC",
      "updated_at":"2020-07-23 12:07:17 UTC",
      "author_association":"MEMBER",
      "body":"Also are pages created are inner links auto-created? i.e. `[[nested [[links]]]]` should created `[[nested [[links]]]]` as well as `[[links]]`.",
      "performed_via_github_app":null
    }
  ]
}
