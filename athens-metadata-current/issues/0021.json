{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/21",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/21/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/21/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/21/events",
  "html_url":"https://github.com/athensresearch/athens/issues/21",
  "id":612894893,
  "node_id":"MDU6SXNzdWU2MTI4OTQ4OTM=",
  "number":21,
  "title":"Interactive graph visualization",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[
    {
      "id":2092524669,
      "node_id":"MDU6TGFiZWwyMDkyNTI0NjY5",
      "url":"https://api.github.com/repos/athensresearch/athens/labels/type:%20%F0%9F%99%83%20later",
      "name":"type: ðŸ™ƒ later",
      "color":"1d76db",
      "default":false,
      "description":""
    }
  ],
  "state":"open",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-05-05 21:05:54 UTC",
  "updated_at":"2020-07-20 01:23:46 UTC",
  "closed_at":null,
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "body":"**READER BEWARE**: this is a rabbithole and perhaps the most exciting part about knowledge graphs. Continue at your own risk.\r\n\r\nI'm skeptical any of these would be quite good enough out of the box for the Roam/Athens use case. But at the implementation level, these are some usable libraries today: \r\n- Roam uses [cytoscape](https://cytoscape.org/), I believe.\r\n- [Org-roam](https://org-roam.readthedocs.io/en/latest/tour/#exporting-the-graph) uses [Graphviz](https://www.graphviz.org/). \r\n- More JS libraries: https://neo4j.com/developer/tools-graph-visualization/\r\n\r\n---\r\n\r\nIn terms of what I want from a graph in general, and not just what is available today, here is a rambling list of stuff: \r\n\r\nRead-level features for a **global** overview, e.g. https://twitterverse.net/:\r\n- can visualize a large number of nodes in a tractable way (Roam already cannot do this), probably with [multiple algorithms and views](https://twitter.com/andy_matuschak/status/1209344598444630016?s=20)\r\n- many variables could be used as parameters to the algorithm\r\n  - number of inbound and/or outbound links (neighbors)\r\n  - content size: word count or number of blocks\r\n  - content itself (i.e. NLP and sentiment analysis)\r\n- based on these parameters, algorithm would be able to cluster nodes, depict node size, and zoom\r\n- zoom (no not that Zoom!)\r\n  - [ZUIs are cool](https://twitter.com/MatthewWSiu/status/1228155105683263490)\r\n  - [PA3D](https://www.youtube.com/watch?v=5JzaEUJ7IbE)\r\n  - [Eagle Mode](https://www.youtube.com/watch?v=G6yPQKt3mBA)\r\n  - [Pad++](https://www.youtube.com/watch?v=62KcJ09k7cE)\r\n- perhaps switch between 2D/3D/VR\r\n\r\nRead+Write at the **local** page level:\r\n- [page preview](https://twitter.com/shime_sh/status/1251593113325522950?s=20) of course\r\n- to [incrementally expand](https://twitter.com/tangjeff0/status/1239977888503521280?s=20) a page's \"peripheral vision\" to 1/2/3/N hops away\r\n- to arbitrarily query subgraphs using set/boolean logic. I believe this combined with previous point would feed into complex permissions, e.g. share [[Page X]] and all nodes at most 3 hops away excluding [[Page Y]]\r\n\r\nLinks, mainly from Discord. Some more relevant than others.\r\n1. [visualizations using Wikipedia data](https://seealso.org/)\r\n1. [Codex for literature analysis](https://twitter.com/codexeditor/status/1188665178642010112?s=20)\r\n1. [dimensonality reduction](https://idyll.pub/post/dimensionality-reduction-293e465c2a3443e8941b016d/)\r\n1. [is it possible that a hypergraph is a better data model](https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125)\r\n1. [noahtren: plotting based on NLP](https://twitter.com/noahtren/status/1259185375291080705)\r\n1. [Go Links](https://medium.com/@golinks/the-full-history-of-go-links-and-the-golink-system-cbc6d2c8bb3)\r\n1. Hive Plots\r\n   - http://bl.ocks.org/RichMorin/raw/2117857/\r\n   - http://egweb.bcgsc.ca/\r\n1. [Les MisÃ©rables Co-occurrence matrix](https://bost.ocks.org/mike/miserables/)\r\n1. Walrus \r\n   - https://www.caida.org/tools/visualization/walrus/\r\n   - https://jovianlin.io/content/images/2018/04/FPTreeWaterVis_Final-3336-2012-04-5-08-38-2.png\r\n1. [RemNote Tree & Graph Viz by David Dohan](https://observablehq.com/@dmrd/remnote-tree-graph-viz)\r\n1. [Kantian corpus viz](https://twitter.com/nwilliams030/status/1184881063413370883?s=20)\r\n1. [Bible corpus viz](https://twitter.com/supaaronpaul/status/1261135822566207488?s=19)\r\n1. [Elm lang dependency viz](https://twitter.com/anvaka/status/1262052384294895616?s=09)\r\n1. https://www.yworks.com/products/yed\r\n1. http://www.biofabric.org/gallery/pages/SuperQuickBioFabric.html\r\n1. git contributor visualization: https://www.youtube.com/watch?v=P_02QGsHzEQ\r\n1. https://quid.com/\r\n1. https://infranodus.com/\r\n1. Garnet https://news.ycombinator.com/item?id=11230547\r\n1. cola.js https://ialab.it.monash.edu/webcola/\r\n1. https://www.anishathalye.com/2019/12/12/constraint-based-graphic-design/",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/624476261",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-624476261",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":624476261,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNDQ3NjI2MQ==",
      "user":{
        "login":"RalfBarkow",
        "id":1205477,
        "node_id":"MDQ6VXNlcjEyMDU0Nzc=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/1205477?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/RalfBarkow",
        "html_url":"https://github.com/RalfBarkow",
        "followers_url":"https://api.github.com/users/RalfBarkow/followers",
        "following_url":"https://api.github.com/users/RalfBarkow/following{/other_user}",
        "gists_url":"https://api.github.com/users/RalfBarkow/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/RalfBarkow/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/RalfBarkow/subscriptions",
        "organizations_url":"https://api.github.com/users/RalfBarkow/orgs",
        "repos_url":"https://api.github.com/users/RalfBarkow/repos",
        "events_url":"https://api.github.com/users/RalfBarkow/events{/privacy}",
        "received_events_url":"https://api.github.com/users/RalfBarkow/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-06 06:57:41 UTC",
      "updated_at":"2020-05-06 06:57:41 UTC",
      "author_association":"NONE",
      "body":"@tangjeff0 Regarding knowledge graphs, I would like to add DMX â€“ The Context Machine @ [dmx.berlin/](https://dmx.berlin/). ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/624476695",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-624476695",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":624476695,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNDQ3NjY5NQ==",
      "user":{
        "login":"teodorlu",
        "id":5285452,
        "node_id":"MDQ6VXNlcjUyODU0NTI=",
        "avatar_url":"https://avatars0.githubusercontent.com/u/5285452?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/teodorlu",
        "html_url":"https://github.com/teodorlu",
        "followers_url":"https://api.github.com/users/teodorlu/followers",
        "following_url":"https://api.github.com/users/teodorlu/following{/other_user}",
        "gists_url":"https://api.github.com/users/teodorlu/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/teodorlu/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/teodorlu/subscriptions",
        "organizations_url":"https://api.github.com/users/teodorlu/orgs",
        "repos_url":"https://api.github.com/users/teodorlu/repos",
        "events_url":"https://api.github.com/users/teodorlu/events{/privacy}",
        "received_events_url":"https://api.github.com/users/teodorlu/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-06 06:59:04 UTC",
      "updated_at":"2020-05-06 06:59:04 UTC",
      "author_association":"NONE",
      "body":"I was about to jump in to say that there's lots of traction in the Clojure world regarding Vega / Vega Lite at the moment. But that lead me to a question:\r\n\r\nThis issue might be about _graph_ as used describing nodes and edges?\r\n\r\nPlotting libraries for XY graphs and similar might be a different subject.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/624476940",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-624476940",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":624476940,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNDQ3Njk0MA==",
      "user":{
        "login":"teodorlu",
        "id":5285452,
        "node_id":"MDQ6VXNlcjUyODU0NTI=",
        "avatar_url":"https://avatars0.githubusercontent.com/u/5285452?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/teodorlu",
        "html_url":"https://github.com/teodorlu",
        "followers_url":"https://api.github.com/users/teodorlu/followers",
        "following_url":"https://api.github.com/users/teodorlu/following{/other_user}",
        "gists_url":"https://api.github.com/users/teodorlu/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/teodorlu/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/teodorlu/subscriptions",
        "organizations_url":"https://api.github.com/users/teodorlu/orgs",
        "repos_url":"https://api.github.com/users/teodorlu/repos",
        "events_url":"https://api.github.com/users/teodorlu/events{/privacy}",
        "received_events_url":"https://api.github.com/users/teodorlu/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-06 06:59:54 UTC",
      "updated_at":"2020-05-06 06:59:54 UTC",
      "author_association":"NONE",
      "body":"> to incrementally expand a page's \"peripheral vision\" to 1/2/3/N hops away\r\n\r\nThis would be fantastic. Roam's graph view is already unusable for me for my private KB.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/624909576",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-624909576",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":624909576,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNDkwOTU3Ng==",
      "user":{
        "login":"tntmarket",
        "id":1150079,
        "node_id":"MDQ6VXNlcjExNTAwNzk=",
        "avatar_url":"https://avatars3.githubusercontent.com/u/1150079?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tntmarket",
        "html_url":"https://github.com/tntmarket",
        "followers_url":"https://api.github.com/users/tntmarket/followers",
        "following_url":"https://api.github.com/users/tntmarket/following{/other_user}",
        "gists_url":"https://api.github.com/users/tntmarket/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tntmarket/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tntmarket/subscriptions",
        "organizations_url":"https://api.github.com/users/tntmarket/orgs",
        "repos_url":"https://api.github.com/users/tntmarket/repos",
        "events_url":"https://api.github.com/users/tntmarket/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tntmarket/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-06 21:49:37 UTC",
      "updated_at":"2020-05-12 06:09:00 UTC",
      "author_association":"NONE",
      "body":"I really like the idea of expanding \"peripheral vision\". I think it could solve the problem of [\"contextualizing where you are relative to your whole knowledge base\"](https://twitter.com/andy_matuschak/status/1202663259536408577?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed&ref_url=https%3A%2F%2Froamresearch.com%2F%23%2Fapp%2Fdavelu%2Fpage%2FILczCEQ1L), which helps:\r\n\r\n* Load many notes into short-term memory, to prompt noticing new connections and inconsistencies\r\n* Navigate by first moving to the \"rough neighborhood\" of the idea, in case you forgot the right search term\r\n* Promote a vague feeling of confidence that notes are well organized\r\n\r\nI'm envisioning a \"google maps style\" interface, where you navigate to a note by:\r\n\r\n1. Zooming out until your destination note enters your periphery\r\n2. Zooming back in to that destination note\r\n\r\nBasically, I want something like [Supreme Commander's Minimap](https://www.youtube.com/watch?v=_tWp4ynONnQ&feature=youtu.be&t=1407)\r\n\r\nTo enable this, I think we need to solve these problems:\r\n\r\n**Multiple hierarchies clutter a visualization**\r\n\r\nI'm ~80% sure that graphs with multiple overlapping hierarchies will _always_ be hard to visualize in space, because tons of edges have no choice but to cross. Even 4 hops away might already be too much for non-trivial, multi-hierarchy knowledge bases.\r\n\r\nMind Maps and Google Maps work because they have a single hierarchy of \"large piece of land\" -> \"small pieces of land\". Zooming in traverses down leafs, and zooming out traverses up to the root. A camera is a spanning tree starting from the node that's the center of attention. The rules are simple, and you don't have overlapping hierarchies cluttering the camera in unpredictable ways.\r\n\r\nOne workaround is to focus on one hierarchy at a time. For example, if you're making decisions about company staffing, you can somehow focus on just the \"org chart\" spanning tree. If you're making decisions about project prioritization, you can focus on just the \"project/task\" spanning tree.\r\n\r\nVisualizing one hierarchy at a time also opens up [specialized tree visualizations](https://treevis.net/) such as [Voronoi Treemaps](https://get.carrotsearch.com/foamtree/latest/demos/)\r\n\r\n**Distance in the visualization should match intuitive relatedness in your brain**\r\n\r\nFor the navigation to be useful, ideas that _feel_ related to another idea should be close to each other in the visualization.\r\n\r\nPhysics spring/repulsion layouts seem to work for single hierarchies, but not for complex graphs. Two ideas that seem related might end up far away in the visualization, because the layout of the dense hierarchies dilutes the layout of the smaller ones. An example would be the [[DONE]] node in Roam being a hub that forces it's children away from each other.\r\n\r\nSome of my intuitions here are:\r\n\r\n1. ideas with many mutual ideas are close\r\n2. ideas with _picky_ mutual ideas are closer\r\n\r\nTo elaborate on 2) - Alice and Bob are close because they both work at [[Company X]] (a picky idea, since not just anyone can work at Company X). Alice and Charles are not close just because they're both [[People]] (a promiscuous idea, since lots of things are People).\r\n\r\nI think expanding peripheral vision should roughly correspond to increasing the \"relatedness radius\" around the center of attention.\r\n\r\nOne method of periphery expansion is to expand each node 1 level deeper. This might clutter the visualization if you expand the [[DONE]] node though - it'd introduce too many irrelevant nodes.\r\n\r\nApplying intuition 2) to expanding periphery - [[DONE]] is a promiscuous idea, so is it needs a larger \"relatedness radius\" before revealing it's links in the visualization.\r\n\r\nOne way to apply this is to have \"expanding periphery\" be like pumping water through the edges of currently visualized nodes. If a node has only a few links (a picky idea), it doesn't require much more pressure for the water to flow through it's links. If a node has many links (promiscuous), it requires a lot of pressure to pump through each link.\r\n\r\nAnother analogy is that a visualization represents the pages and links you'd traverse if you cloned yourself and started exploring from the center of attention. Pages with many links have more cognitive overload, so it requires more attention to navigate past them.\r\n\r\n**Visualization should be somewhat stable and consistent**\r\n\r\nAssociating an idea spatially makes it easier to remember ([Method of Loci](https://en.wikipedia.org/wiki/Method_of_loci)), but if the visualization changes drastically, the spatial associations are discarded.\r\n\r\nI believe this is why Roam's 1-hop page-specific graph visualization isn't actually useful for navigation - the notes move around every time you navigate, so the spatial associations are too ephemeral to memorize and reuse. [The Brain's visualization](https://www.thebrain.com/images/homepage/MarieCurie.gif) also seems to have this issue.\r\n\r\nWith paper mind mapping on the other hand, an idea almost seems to occupy a physical location in space, because it's hard to erase/move nodes. The space is the scaffolding that contextualizes the ideas.\r\n\r\nTo solve this issue, I think the visualization needs to be somewhat consistent, at least for the duration of one \"session\".",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/625756488",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-625756488",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":625756488,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNTc1NjQ4OA==",
      "user":{
        "login":"renissance",
        "id":65006255,
        "node_id":"MDQ6VXNlcjY1MDA2MjU1",
        "avatar_url":"https://avatars3.githubusercontent.com/u/65006255?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/renissance",
        "html_url":"https://github.com/renissance",
        "followers_url":"https://api.github.com/users/renissance/followers",
        "following_url":"https://api.github.com/users/renissance/following{/other_user}",
        "gists_url":"https://api.github.com/users/renissance/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/renissance/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/renissance/subscriptions",
        "organizations_url":"https://api.github.com/users/renissance/orgs",
        "repos_url":"https://api.github.com/users/renissance/repos",
        "events_url":"https://api.github.com/users/renissance/events{/privacy}",
        "received_events_url":"https://api.github.com/users/renissance/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-08 10:45:16 UTC",
      "updated_at":"2020-05-08 10:45:16 UTC",
      "author_association":"NONE",
      "body":"Really enjoying this thread. Graph visualizations do get really messy, especially in this context, where you'll have a ton of edges and (potentially) a fair amount of duplicate vertices. \r\n\r\nSome thoughts:\r\n\r\n**First, vertex annotation helps solve for graph legibility.** Adjusting vertex size based on degree is a great first step. We can also annotate nodes at the ontology level and the display level. \r\n\r\n*Ontology level*\r\nYou can map vertex labels to icons, colors, and other semantically meaningful visual indicators. For instance, you can infer concept type with an [entity classifier,](https://spacy.io/usage/linguistic-features#named-entities) and then map the different entity types to icons that would appear close to the node: i.e. geographic concepts -> globe icon, intellectual concepts -> book icons, people -> stick icons.  \r\n\r\n[Linkurious](https://linkurio.us/) and [KeyLines](https://cambridge-intelligence.com/), and Palantir (even though Palantir isn't actually a graph) all use this design pattern.  \r\n\r\nIn the vein of focusing on one hierarchy at a time, users could also use the icons to drill down on specific types of context: i.e. reduce the graph to the relationships between financial concepts and emotional concepts.\r\n\r\nYou can also extend the markdown language so folks could, say, represent the importance of a concept to them by adding extra brackets when they instantiated the concept -- or at some later point. You could do a bunch of things with that, like add a star next to the vertex for each bracket, change the vertex's color, etc.\r\n\r\n*Display level*\r\n\r\nYou could allow users to add annotations to vertex while they interact with the visualization to help them build their own map of the map, as it were. For instance, users could add a \"bookmark\" to a vertex that is relevant to their current line of inquiry.\r\n\r\n**[Louvain](https://pypi.org/project/python-louvain/) (very fast) and [Girvan-Newmann](https://networkx.github.io/documentation/stable/reference/algorithms/generated/networkx.algorithms.community.centrality.girvan_newman.html?highlight=girvan%20newman#networkx.algorithms.community.centrality.girvan_newman) (not so fast) could be options for identifying hierarchy in bi-directional graphs** \r\n\r\nLouvain and Girvan-Newmann return a set of hierarchical communities (optimized for modularity) for each record; these steps can correspond to incremental network views (as communities merge at each step). Those communities would play nicely with something like the [Voronoi treemaps](https://get.carrotsearch.com/foamtree/latest/demos/) mentioned above.\r\n\r\nThis ^ leads into..\r\n\r\n**Linear approaches to graph visualization**\r\n\r\nTraditional graph layout algorithms create \"hairballs\" that are hard to interpret. Martin Krzywinski. developed a method for what he calls \"rational network visualization\" called [hive plots](http://egweb.bcgsc.ca/). Nice interactive example [here](http://bl.ocks.org/RichMorin/raw/2117857/).\r\n\r\nHive plots assign vertices to one of three or more axes (which can be divided into segments) and ordered based on meaningful attributes (i.e. centrality). This approach has a lot of advantages:\r\n\r\nThe biggest advantage to this approach (beyond a user being able to accurately infer something about a vertex/community/whatever based on its position) is that userscan optimize network layout based on attributes they care about; put all of concept/document type X on this axis, type Y on this axis, group by betweenness centrality (used to identify bridge ideas) etc.\r\n\r\nYou can also do cool stuff with [cooccurrence matrices](https://bost.ocks.org/mike/miserables/).\r\n\r\nLast, on the challenge of identifying vertices that are relevant to a given vertex, even if they're multiple degrees separated:\r\n\r\n-  You could run weighted shortest path queries to identify vertices that are multiple degrees away from the vertex you're interested in of type (x). I.e. what are the most interesting concept y nodes related to my concept x node. You can weight edges by number of concept cooccurences or have multiple edge types with different weights (this would be hard without user annotation).\r\n\r\n- You could use network metrics like [triangle counts](https://neo4j.com/docs/graph-data-science/current/algorithms/triangle-counting-clustering-coefficient/) to identify a nodes key neighbors (kind of like a top 8 on MySpace.)\r\n\r\n- You can use node embeddings (i.e. [node2vec](http://snap.stanford.edu/node2vec/)) to do a query like give me the top N closest vertices to my vertex based on how close they are in vector space. You can then allow the user to customize that query for their use case -- give me top N and exclude vertex of type X, or document containing this term, or so an so forth. I love node2vec. It works really well.\r\n\r\nNode2vec only draws from network structure but [stellargraph](https://www.stellargraph.io/) has algorithms that draw from network structure & vertex features so you get even better recommendations.\r\n\r\n\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633309927",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-633309927",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":633309927,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzMwOTkyNw==",
      "user":{
        "login":"jandot",
        "id":10043,
        "node_id":"MDQ6VXNlcjEwMDQz",
        "avatar_url":"https://avatars3.githubusercontent.com/u/10043?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jandot",
        "html_url":"https://github.com/jandot",
        "followers_url":"https://api.github.com/users/jandot/followers",
        "following_url":"https://api.github.com/users/jandot/following{/other_user}",
        "gists_url":"https://api.github.com/users/jandot/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jandot/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jandot/subscriptions",
        "organizations_url":"https://api.github.com/users/jandot/orgs",
        "repos_url":"https://api.github.com/users/jandot/repos",
        "events_url":"https://api.github.com/users/jandot/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jandot/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-24 22:29:23 UTC",
      "updated_at":"2020-05-24 22:29:23 UTC",
      "author_association":"NONE",
      "body":"I do suggest you have a quick look at vega for this, at least for a prototype. As a visual specification is in json there is a very nice mapping to clojure data structures. In that regard, also have a look at the clojure oz library for vega. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633310052",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-633310052",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":633310052,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzMxMDA1Mg==",
      "user":{
        "login":"jandot",
        "id":10043,
        "node_id":"MDQ6VXNlcjEwMDQz",
        "avatar_url":"https://avatars3.githubusercontent.com/u/10043?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jandot",
        "html_url":"https://github.com/jandot",
        "followers_url":"https://api.github.com/users/jandot/followers",
        "following_url":"https://api.github.com/users/jandot/following{/other_user}",
        "gists_url":"https://api.github.com/users/jandot/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jandot/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jandot/subscriptions",
        "organizations_url":"https://api.github.com/users/jandot/orgs",
        "repos_url":"https://api.github.com/users/jandot/repos",
        "events_url":"https://api.github.com/users/jandot/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jandot/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-24 22:30:25 UTC",
      "updated_at":"2020-05-24 22:30:25 UTC",
      "author_association":"NONE",
      "body":"Another thing that might be useful: running community detection on the graph and coloring the nodes according to their community. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633310172",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-633310172",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":633310172,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzMxMDE3Mg==",
      "user":{
        "login":"jandot",
        "id":10043,
        "node_id":"MDQ6VXNlcjEwMDQz",
        "avatar_url":"https://avatars3.githubusercontent.com/u/10043?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jandot",
        "html_url":"https://github.com/jandot",
        "followers_url":"https://api.github.com/users/jandot/followers",
        "following_url":"https://api.github.com/users/jandot/following{/other_user}",
        "gists_url":"https://api.github.com/users/jandot/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jandot/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jandot/subscriptions",
        "organizations_url":"https://api.github.com/users/jandot/orgs",
        "repos_url":"https://api.github.com/users/jandot/repos",
        "events_url":"https://api.github.com/users/jandot/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jandot/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-24 22:31:30 UTC",
      "updated_at":"2020-05-24 22:31:30 UTC",
      "author_association":"NONE",
      "body":"Also: please please stay away from 3D/VR. I teach data visualisation, and... well: just don't. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633310829",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-633310829",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":633310829,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzMxMDgyOQ==",
      "user":{
        "login":"jandot",
        "id":10043,
        "node_id":"MDQ6VXNlcjEwMDQz",
        "avatar_url":"https://avatars3.githubusercontent.com/u/10043?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jandot",
        "html_url":"https://github.com/jandot",
        "followers_url":"https://api.github.com/users/jandot/followers",
        "following_url":"https://api.github.com/users/jandot/following{/other_user}",
        "gists_url":"https://api.github.com/users/jandot/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jandot/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jandot/subscriptions",
        "organizations_url":"https://api.github.com/users/jandot/orgs",
        "repos_url":"https://api.github.com/users/jandot/repos",
        "events_url":"https://api.github.com/users/jandot/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jandot/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-24 22:37:55 UTC",
      "updated_at":"2020-05-24 22:37:55 UTC",
      "author_association":"NONE",
      "body":"In response to tntmarket's ideas above regarding a complex graph suffering from a lot of crossing edges: you could also run something like tSNE on the nodes and let that algorithm define the location of the nodes on the screen, without showing the actual links. These could for example only be shown if hovering over a node. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/634285100",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-634285100",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":634285100,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzNDI4NTEwMA==",
      "user":{
        "login":"brady77",
        "id":8817469,
        "node_id":"MDQ6VXNlcjg4MTc0Njk=",
        "avatar_url":"https://avatars3.githubusercontent.com/u/8817469?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/brady77",
        "html_url":"https://github.com/brady77",
        "followers_url":"https://api.github.com/users/brady77/followers",
        "following_url":"https://api.github.com/users/brady77/following{/other_user}",
        "gists_url":"https://api.github.com/users/brady77/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/brady77/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/brady77/subscriptions",
        "organizations_url":"https://api.github.com/users/brady77/orgs",
        "repos_url":"https://api.github.com/users/brady77/repos",
        "events_url":"https://api.github.com/users/brady77/events{/privacy}",
        "received_events_url":"https://api.github.com/users/brady77/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-26 21:19:13 UTC",
      "updated_at":"2020-05-26 21:19:13 UTC",
      "author_association":"NONE",
      "body":"There is quite outdated tool (in Flash) called RelFinder. I fell in love with it, immediately. Please consider adding similar functionality to Athens = discovering all connections between a list of pages (including the faceted search). It is very different from shortest-path finder. Here is a Youtube video:\r\n\r\nhttps://www.youtube.com/watch?v=G0r1G-duPcQ\r\n\r\nThanks.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/634969094",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-634969094",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":634969094,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzNDk2OTA5NA==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-27 22:08:14 UTC",
      "updated_at":"2020-05-27 22:08:30 UTC",
      "author_association":"MEMBER",
      "body":"Will re-open when after v1 is complete",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/650085409",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-650085409",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":650085409,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MDA4NTQwOQ==",
      "user":{
        "login":"Nek",
        "id":132011,
        "node_id":"MDQ6VXNlcjEzMjAxMQ==",
        "avatar_url":"https://avatars0.githubusercontent.com/u/132011?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/Nek",
        "html_url":"https://github.com/Nek",
        "followers_url":"https://api.github.com/users/Nek/followers",
        "following_url":"https://api.github.com/users/Nek/following{/other_user}",
        "gists_url":"https://api.github.com/users/Nek/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/Nek/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/Nek/subscriptions",
        "organizations_url":"https://api.github.com/users/Nek/orgs",
        "repos_url":"https://api.github.com/users/Nek/repos",
        "events_url":"https://api.github.com/users/Nek/events{/privacy}",
        "received_events_url":"https://api.github.com/users/Nek/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-26 09:30:44 UTC",
      "updated_at":"2020-06-26 09:30:44 UTC",
      "author_association":"NONE",
      "body":"There is something that can be a source of inspiration for visualizing the graph in a number of useful ways. It's [Tinderbox app for MacOS](https://www.eastgate.com/Tinderbox/?gclid=Cj0KCQjwudb3BRC9ARIsAEa-vUvVDls289Y9nAlAC23pIxUdfzrytMbTff6D9JmAWFAXHlA_qd8bN0kaAnjhEALw_wcB).\r\n\r\nThe features I would love to see implemented are:\r\n- agents;\r\n- timeline view.\r\n\r\nIt's probably out of scope of this specific conversation but I feel like graph visualization is a subset of a more abstract projecting data into something visual/interactive task, which is good to keep in mind to be more creative about the solution.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/651174496",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-651174496",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":651174496,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MTE3NDQ5Ng==",
      "user":{
        "login":"nixsee",
        "id":24255237,
        "node_id":"MDQ6VXNlcjI0MjU1MjM3",
        "avatar_url":"https://avatars0.githubusercontent.com/u/24255237?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/nixsee",
        "html_url":"https://github.com/nixsee",
        "followers_url":"https://api.github.com/users/nixsee/followers",
        "following_url":"https://api.github.com/users/nixsee/following{/other_user}",
        "gists_url":"https://api.github.com/users/nixsee/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/nixsee/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/nixsee/subscriptions",
        "organizations_url":"https://api.github.com/users/nixsee/orgs",
        "repos_url":"https://api.github.com/users/nixsee/repos",
        "events_url":"https://api.github.com/users/nixsee/events{/privacy}",
        "received_events_url":"https://api.github.com/users/nixsee/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-29 14:55:27 UTC",
      "updated_at":"2020-06-29 15:11:08 UTC",
      "author_association":"NONE",
      "body":"I'm neither a coder nor a data expert in any way, but I've been dreaming about this sort of functionality for about 6 years.  TheBrain was just too clunky in the text-editing side of things, even if it was visually beautiful. Gephi and Linkurious weren't really what I was after either. I spent (too much) time trying to learn Javascript to use d3js force diagrams to map out my notes and blog posts, but it was just too far beyond my capabilities. \r\n\r\nI ended up just using OneNote, but would love to get out of it for many reasons, so I'm extremely thrilled to see the recent explosion of tools that integrate notes and visualization.  I just found out about Roam yesterday, quickly moved past it due to closed source, extortionate fees, and an embarrassingly useless graphing implementation. \r\n\r\nI just want to say that coming across Athens, and specifically this discussion thread, has filled me with joy that my dreams may finally be coming to reality of having a powerful yet simple, open-source, etc... knowledge tool that allows for excellent text-based entry (like Roam) but also a proper appreciation of data visualization techniques. I have tons of ideas documented from my d3js boondoggle of how I'd want the map to work - tooltips/preview, zoom, filters, search, centering on nodes, only showing nodes that are x amount of hops away, etc.. - and you clearly have all those bases covered, and more.\r\n\r\nIn all likelihood I'll be transitioning all of my cluttered notes from OneNote to Obsidian (since they use basic markdown files) in the coming days, organizing and reformatting them with links etc... and then probably moving them over to Athens once you guys are up and running because of the open ethos (and probably superior technical capabilities as well). \r\n\r\nSorry if this clutters the topical discussion thread - I just wanted to share my appreciation for what you are doing. You guys really know what you're talking about and I cant wait to see and use it. I'll be at the front of the line to use it and will be eager to give thoughtful feedback on it all. \r\n\r\nThe only thing I'll suggest for now is to keep it as simple as possible (or allow for the user to customize what they see) - most of the links in the original post are to diagrams that look extremely impressive visually, but are absolutely useless for any sort of actual knowledge transfer (and as jandot said above - stay away from 3D). I think various filters based on tags and other metadata, and customizing how many hops away you can see will work very well.\r\n\r\nThank you very much for your hard work - this is a really important project.\r\n\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/660747913",
      "html_url":"https://github.com/athensresearch/athens/issues/21#issuecomment-660747913",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/21",
      "id":660747913,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2MDc0NzkxMw==",
      "user":{
        "login":"JesseAldridge",
        "id":191903,
        "node_id":"MDQ6VXNlcjE5MTkwMw==",
        "avatar_url":"https://avatars3.githubusercontent.com/u/191903?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/JesseAldridge",
        "html_url":"https://github.com/JesseAldridge",
        "followers_url":"https://api.github.com/users/JesseAldridge/followers",
        "following_url":"https://api.github.com/users/JesseAldridge/following{/other_user}",
        "gists_url":"https://api.github.com/users/JesseAldridge/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/JesseAldridge/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/JesseAldridge/subscriptions",
        "organizations_url":"https://api.github.com/users/JesseAldridge/orgs",
        "repos_url":"https://api.github.com/users/JesseAldridge/repos",
        "events_url":"https://api.github.com/users/JesseAldridge/events{/privacy}",
        "received_events_url":"https://api.github.com/users/JesseAldridge/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-20 01:23:45 UTC",
      "updated_at":"2020-07-20 01:23:45 UTC",
      "author_association":"NONE",
      "body":"JesseToday at 5:57 PM\r\nmanually creating graph layouts is the most undervalued strategy\r\n\r\nhttps://www.dropbox.com/s/c6nlk53jlhetqai/toothbrush_diagrams.mov?dl=0\r\nDropbox\r\ntoothbrush_diagrams.mov\r\nShared with Dropbox\r\n\r\nhttps://github.com/JesseAldridge/electric_toothbrush\r\nGitHub\r\nJesseAldridge/electric_toothbrush\r\nSimple client/server notetaking tool inspired by Notational Velocity - JesseAldridge/electric_toothbrush\r\n\r\nI tried pitching this to the Obsidian people but they didn't get on board lol\r\nJeff TangToday at 6:05 PM\r\npitch us\r\nJesseToday at 6:07 PM\r\nI mean the demo video pretty well captures it\r\nthe short version: graphs are a better way to represent knowledge\r\nauto graph layout is too hard though\r\nso build a tool oriented around easy editing of graph layouts\r\nJeff TangToday at 6:10 PM\r\nwhere's the demo?\r\nJesseToday at 6:10 PM\r\nhttps://www.dropbox.com/s/c6nlk53jlhetqai/toothbrush_diagrams.mov?dl=0\r\nDropbox\r\ntoothbrush_diagrams.mov\r\nShared with Dropbox\r\n\r\ndiscord unfurls the link annoyingly\r\nif you click anything other than the giant image it wants you to click you can watch it :slight_smile:\r\nJeff TangToday at 6:15 PM\r\noh i thought it was on github\r\nJesseToday at 6:15 PM\r\nit's open source yes\r\nso also on github\r\nJeff TangToday at 6:15 PM\r\nhaha sorry so much confusion i meant i thought the link to the video was on github\r\nbut it was here all along\r\nJesseToday at 6:16 PM\r\n:rainbow:\r\nmost annoying thing about the tool is it crashes if you type too fast\r\nbut it works 95% of the time which is just enough to make me too lazy to fix it\r\nJeff TangToday at 6:18 PM\r\nthis is really cool\r\nhow could you see this working with athens\r\nJesseToday at 6:20 PM\r\nI don't actually know what athens is lol\r\nI just know that I'm no longer interested in using text files to manage knowledge\r\nI'm hoping somebody else will build a \"graph first\" knowledge management tool for me\r\nJeff TangToday at 6:22 PM\r\ncool well add your wants/thoughts here https://github.com/athensresearch/athens/issues/21\r\n",
      "performed_via_github_app":null
    }
  ]
}
