{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/5",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/5/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/5/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/5/events",
  "html_url":"https://github.com/athensresearch/athens/issues/5",
  "id":607620955,
  "node_id":"MDU6SXNzdWU2MDc2MjA5NTU=",
  "number":5,
  "title":"Parse nested links",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[],
  "state":"closed",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-04-27 15:01:10 UTC",
  "updated_at":"2020-07-14 01:36:48 UTC",
  "closed_at":"2020-07-14 01:36:48 UTC",
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "body":"[Instaparse](https://github.com/Engelberg/instaparse) is the parsing library Athens and Roam use. \r\n\r\nThe code for Athens's parser can be found in `src/cljs/athens/parser.cljs`\r\n\r\nI watched these [videos](https://www.youtube.com/watch?v=MMxMeX5emUA&list=PLWi7UcbOD_0uAqjcezZxsbSaYwuMSAKxM&index=2&t=4s) to learn about EBNF Syntax, the parsing syntax used by Instaparse.\r\n\r\nThis [blog](https://adereth.github.io/blog/2016/01/20/visualizing-girl-talk-with-clojure-and-d3-dot-js/) shows an example of `instaparse` that might be helpful for the link parsing.\r\n\r\nThere are many useful test cases for parsing at http://localhost:3000/#/page/fxi42G2zA, which is the, the page [[Nested [[Links]]]]\r\n\r\n## Nested links\r\n![Screen Shot 2020-04-27 at 10 59 09 AM](https://user-images.githubusercontent.com/8952138/80387025-22d31a00-8876-11ea-9dc8-fbacc1349052.png)",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/622503710",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-622503710",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":622503710,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMjUwMzcxMA==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-01 18:22:47 UTC",
      "updated_at":"2020-05-01 18:34:13 UTC",
      "author_association":"MEMBER",
      "body":"Also see this [commit](https://github.com/athensresearch/athens/commit/2fd1a232ae0b9da6c86fb8656b260b892cdebd93) for example hiccup that has a TODO checkbox, a link, and a nested link.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623520922",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623520922",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623520922,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzUyMDkyMg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 15:08:38 UTC",
      "updated_at":"2020-05-04 15:08:38 UTC",
      "author_association":"MEMBER",
      "body":"How much can be reused from existing parsing Instaparse libraries? Especially for formatting.\r\n\r\n- https://github.com/chameco/Hitman\r\n- https://github.com/danneu/klobbdown",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623526855",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623526855",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623526855,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzUyNjg1NQ==",
      "user":{
        "login":"jeroenvandijk",
        "id":27645,
        "node_id":"MDQ6VXNlcjI3NjQ1",
        "avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jeroenvandijk",
        "html_url":"https://github.com/jeroenvandijk",
        "followers_url":"https://api.github.com/users/jeroenvandijk/followers",
        "following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}",
        "gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions",
        "organizations_url":"https://api.github.com/users/jeroenvandijk/orgs",
        "repos_url":"https://api.github.com/users/jeroenvandijk/repos",
        "events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jeroenvandijk/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 15:18:21 UTC",
      "updated_at":"2020-05-04 15:18:21 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"> Also see this commit for example hiccup that has a TODO checkbox, a link, and a nested link.\r\n\r\n@tangjeff0 I would be interested to see the datoms belonging to this markdown / example hiccup. It would help me to get the bigger picture. Do you have this mapping somewhere?",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623533792",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623533792",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623533792,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzUzMzc5Mg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 15:29:58 UTC",
      "updated_at":"2020-05-04 15:36:46 UTC",
      "author_association":"MEMBER",
      "body":"@jeroenvandijk The markdown/hiccup comes directly from pure text, so the directly relevant datom would be \r\n\r\n```{:block/string \"{{[[TODO]]}} work on [[Deep Transclusions]] and [[Nested [[Links]]]]\"}```\r\n\r\nIf you are running Athens locally, there are many more examples on the \"Nested [[Links]]\" page: http://localhost:3000/#/page/fxi42G2zA.\r\n\r\nThat said, it's a great question of how we can see which datoms are written/read directly during development. `re-frame-10x` doesn't play super well with `re-posh`. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623543923",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623543923",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623543923,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzU0MzkyMw==",
      "user":{
        "login":"anshbansal",
        "id":4127841,
        "node_id":"MDQ6VXNlcjQxMjc4NDE=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/4127841?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/anshbansal",
        "html_url":"https://github.com/anshbansal",
        "followers_url":"https://api.github.com/users/anshbansal/followers",
        "following_url":"https://api.github.com/users/anshbansal/following{/other_user}",
        "gists_url":"https://api.github.com/users/anshbansal/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/anshbansal/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/anshbansal/subscriptions",
        "organizations_url":"https://api.github.com/users/anshbansal/orgs",
        "repos_url":"https://api.github.com/users/anshbansal/repos",
        "events_url":"https://api.github.com/users/anshbansal/events{/privacy}",
        "received_events_url":"https://api.github.com/users/anshbansal/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 15:47:11 UTC",
      "updated_at":"2020-05-04 15:47:11 UTC",
      "author_association":"NONE",
      "body":"Need some help in case anybody knows this\r\n\r\nI am trying to replace the clicking of anchor tag with on-click of a span\r\n\r\nSo this to \r\n```\r\n[:a {:href (rfee/href :page {:id bid})} title]\r\n```\r\n\r\nthis\r\n```\r\n[:span {:on-click (fn [e]\r\n       (rfee/href :page {:id bid}))}\r\n        title]\r\n```\r\n\r\n`rfee` is `retit.frontend.easy`\r\n\r\nThe reason I am trying to do this is because I want to handle nested links in the text for which I wanted to make changes\r\n\r\nThe anchor tag works but the on-click is not working\r\n\r\nI am checking the event handlers which are registered in the browser on the span and I don't see any handler being registered\r\n\r\nI was looking at https://purelyfunctional.tv/guide/re-frame-building-blocks/#introduction so the syntax seems correct\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623559355",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623559355",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623559355,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzU1OTM1NQ==",
      "user":{
        "login":"jeroenvandijk",
        "id":27645,
        "node_id":"MDQ6VXNlcjI3NjQ1",
        "avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jeroenvandijk",
        "html_url":"https://github.com/jeroenvandijk",
        "followers_url":"https://api.github.com/users/jeroenvandijk/followers",
        "following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}",
        "gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions",
        "organizations_url":"https://api.github.com/users/jeroenvandijk/orgs",
        "repos_url":"https://api.github.com/users/jeroenvandijk/repos",
        "events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jeroenvandijk/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 16:13:59 UTC",
      "updated_at":"2020-05-04 16:13:59 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Not sure, looks correct. What if you try `[:span {:on-click (fn [e] (js/alert \"works\") )} \"click me\"]`? that doesn't work?",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623566845",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623566845",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623566845,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzU2Njg0NQ==",
      "user":{
        "login":"anshbansal",
        "id":4127841,
        "node_id":"MDQ6VXNlcjQxMjc4NDE=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/4127841?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/anshbansal",
        "html_url":"https://github.com/anshbansal",
        "followers_url":"https://api.github.com/users/anshbansal/followers",
        "following_url":"https://api.github.com/users/anshbansal/following{/other_user}",
        "gists_url":"https://api.github.com/users/anshbansal/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/anshbansal/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/anshbansal/subscriptions",
        "organizations_url":"https://api.github.com/users/anshbansal/orgs",
        "repos_url":"https://api.github.com/users/anshbansal/repos",
        "events_url":"https://api.github.com/users/anshbansal/events{/privacy}",
        "received_events_url":"https://api.github.com/users/anshbansal/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 16:27:09 UTC",
      "updated_at":"2020-05-04 16:27:09 UTC",
      "author_association":"NONE",
      "body":"> Not sure, looks correct. What if you try `[:span {:on-click (fn [e] (js/alert \"works\") )} \"click me\"]`? that doesn't work?\r\n\r\nthat worked. Will check the docs. Maybe I am not calling the function properly. I'll go back and spend some time learning the framework first.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/623575296",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-623575296",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":623575296,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyMzU3NTI5Ng==",
      "user":{
        "login":"anshbansal",
        "id":4127841,
        "node_id":"MDQ6VXNlcjQxMjc4NDE=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/4127841?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/anshbansal",
        "html_url":"https://github.com/anshbansal",
        "followers_url":"https://api.github.com/users/anshbansal/followers",
        "following_url":"https://api.github.com/users/anshbansal/following{/other_user}",
        "gists_url":"https://api.github.com/users/anshbansal/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/anshbansal/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/anshbansal/subscriptions",
        "organizations_url":"https://api.github.com/users/anshbansal/orgs",
        "repos_url":"https://api.github.com/users/anshbansal/repos",
        "events_url":"https://api.github.com/users/anshbansal/events{/privacy}",
        "received_events_url":"https://api.github.com/users/anshbansal/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-04 16:43:10 UTC",
      "updated_at":"2020-05-04 16:43:32 UTC",
      "author_association":"NONE",
      "body":"figured it out. had to use push-state. Seems the href is for actual anchor tags. The docs are not super clear on it. Made https://github.com/metosin/reitit/issues/393 to understand this for future reference",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/626058651",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-626058651",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":626058651,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNjA1ODY1MQ==",
      "user":{
        "login":"teodorlu",
        "id":5285452,
        "node_id":"MDQ6VXNlcjUyODU0NTI=",
        "avatar_url":"https://avatars0.githubusercontent.com/u/5285452?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/teodorlu",
        "html_url":"https://github.com/teodorlu",
        "followers_url":"https://api.github.com/users/teodorlu/followers",
        "following_url":"https://api.github.com/users/teodorlu/following{/other_user}",
        "gists_url":"https://api.github.com/users/teodorlu/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/teodorlu/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/teodorlu/subscriptions",
        "organizations_url":"https://api.github.com/users/teodorlu/orgs",
        "repos_url":"https://api.github.com/users/teodorlu/repos",
        "events_url":"https://api.github.com/users/teodorlu/events{/privacy}",
        "received_events_url":"https://api.github.com/users/teodorlu/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-08 23:14:18 UTC",
      "updated_at":"2020-05-08 23:16:07 UTC",
      "author_association":"NONE",
      "body":"I see that _Deep Transclusions_ has been checked off in the original post. Does that mean deep transclusions are working? Do we have an example of that?\r\n\r\nI've been playing with the parser in the REPL, and I can't seem to get it to parse any examples I can come up with. I'm planning to look into this over the weekend.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/626059357",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-626059357",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":626059357,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNjA1OTM1Nw==",
      "user":{
        "login":"teodorlu",
        "id":5285452,
        "node_id":"MDQ6VXNlcjUyODU0NTI=",
        "avatar_url":"https://avatars0.githubusercontent.com/u/5285452?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/teodorlu",
        "html_url":"https://github.com/teodorlu",
        "followers_url":"https://api.github.com/users/teodorlu/followers",
        "following_url":"https://api.github.com/users/teodorlu/following{/other_user}",
        "gists_url":"https://api.github.com/users/teodorlu/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/teodorlu/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/teodorlu/subscriptions",
        "organizations_url":"https://api.github.com/users/teodorlu/orgs",
        "repos_url":"https://api.github.com/users/teodorlu/repos",
        "events_url":"https://api.github.com/users/teodorlu/events{/privacy}",
        "received_events_url":"https://api.github.com/users/teodorlu/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-08 23:17:05 UTC",
      "updated_at":"2020-05-08 23:17:05 UTC",
      "author_association":"NONE",
      "body":"Looks like the parser code isn't used in any outside modules as of now.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/626061717",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-626061717",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":626061717,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNjA2MTcxNw==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-08 23:27:01 UTC",
      "updated_at":"2020-05-08 23:27:01 UTC",
      "author_association":"MEMBER",
      "body":"Deep transclusions at http://localhost:3000/#/page/UxbY48ffJ.\r\n\r\nLots of generic test cases at http://localhost:3000/#/page/fxi42G2zA",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/634998068",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-634998068",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":634998068,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzNDk5ODA2OA==",
      "user":{
        "login":"roryokane",
        "id":79168,
        "node_id":"MDQ6VXNlcjc5MTY4",
        "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/roryokane",
        "html_url":"https://github.com/roryokane",
        "followers_url":"https://api.github.com/users/roryokane/followers",
        "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
        "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
        "organizations_url":"https://api.github.com/users/roryokane/orgs",
        "repos_url":"https://api.github.com/users/roryokane/repos",
        "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
        "received_events_url":"https://api.github.com/users/roryokane/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-27 23:31:53 UTC",
      "updated_at":"2020-05-27 23:33:59 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"I’ve started looking into this. (_Edit:_ written before this issue was closed).\r\n\r\n## Both parsing and not parsing the link content\r\n\r\nOne of the complexities of this feature is that the **syntax for the nested links is included in the parent link**. For example, with `[[Nested [[Links]]]]`, the outermost link is to a page named `Nested [[Links]]`. And according to my tests, Roam treats this as a different page from one titled `Nested Links`. It’s the same for other nested formatting like `[[Nested **bold**]]`: formatting is significant to the link.\r\n\r\nThis makes parsing nested links challenging because you need to both _parse_ and _not parse_ the interior of links. You need to turn `[[Links]]` into a data structure representing a link to `Links`, but you also need to know that that part of the text should contribute `[[Links]]`, with square brackets, to the parent link’s target page title.\r\n\r\n### Transforming to an intermediate AST\r\n\r\nAs a first step, I think the [idea I was considering][comment-about-split-transform-steps], an intermediate AST before transforming into Hiccup, would make this feature easier to write and read. After parsing this markup with Instaparse:\r\n\r\n[comment-about-split-transform-steps]: https://github.com/athensresearch/athens/pull/88#issuecomment-633164597\r\n\r\n~~~\r\nNested [[Links]]\r\n~~~\r\n\r\nThe first stage of the AST can focus on how to turn this:\r\n\r\n~~~clj\r\n[:link \"Nested \" [:link \"Links\"]]\r\n~~~\r\n\r\ninto this:\r\n\r\n~~~clj\r\n[:link {:destination \"Nested [[Links]]\"} \"Nested \" [:link \"Links\"]]\r\n~~~\r\n\r\n(Using Hiccup-like structure for the AST because it seems natural, and it’s also powerful enough to represent the CommonMark AST visible in [CommonMark’s demo](https://spec.commonmark.org/dingus/).)\r\n\r\nAnd the second stage can turn that into `[:a {:href …} …]` or whatever DOM structure fits best in the web app without concerning itself with extracting the link destination.\r\n\r\n### Ways to do the transformation\r\n\r\nI see two possible ways to perform this transformation: remembering the source text or reconstructing the source text.\r\n\r\n#### Remembering the source text\r\n\r\nAs I found with the following tests (I don’t have the output right now, sorry), Instaparse includes information about the source of parsed blocks in its parse tree:\r\n\r\n~~~clj\r\n(binding [*print-meta* true]\r\n  (prn (block-parser \"[[link]]\")))\r\n(prn (meta (block-parser \"[[link]]\")))\r\n~~~\r\n\r\nThe meta object of each parsed node from Instaparse contains the `:start-index` and `:end-index` (within the original string) of the current node. That could be used with [`subs`](https://clojuredocs.org/clojure.core/subs) to extract the contents of the link from the source text.\r\n\r\n#### Reconstructing the source text\r\n\r\nWe could reconstruct the source text by printing the AST back to a string. So when a link is transformed, it would look at the AST inside it, print it (with recursive rules for every type of AST node), then set that text as the destination of the link.\r\n\r\nThis solution feels more elegant in that you don’t have to keep a reference to the original string. It’s also possible that we’ll need tree-printing capability eventually anyway. But this solution would also add complexity in some other ways.\r\n\r\nOne source of complexity with this solution is the challenge of matching the original syntax exactly. If we define links as pointing to the page with those exact characters between `[[` `]]`, then this printing must be literal printing, not pretty-printing, or links might break due to syntax differences that don’t affect the visual formatting. (I’m thinking how in Markdown, both `_foo_` and `*foo*` are italic. I’m not sure if Roam syntax has any such differences right now, but I bet Athens will have differences like those at some point.)\r\n\r\nAlternatively, pretty-printing would be an easy solution if we define all links that parse to the same AST as pointing to the same page. That would require making the link-rendering code normalize all links by pretty-printing them, which is also not that hard. But that might add complexity to the user’s mental model of links. Would it make users _confused_ or _happy_ if they wrote two links with different syntax but the same visual formatting, and found that they linked to the same page?\r\n\r\n---\r\n\r\nI’m still deciding which approach to the transformation would be better – remembering the source text or reconstructing the source text. There’s also another difficulty in implementing this feature I’ve noticed: you **can’t nest `a` tags in HTML**. I might write more about possible solutions for that later.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/635434606",
      "html_url":"https://github.com/athensresearch/athens/issues/5#issuecomment-635434606",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/5",
      "id":635434606,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzNTQzNDYwNg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-28 15:52:30 UTC",
      "updated_at":"2020-05-28 15:52:30 UTC",
      "author_association":"MEMBER",
      "body":"Re-opened this and other parser issues @roryokane . Just wanted to focus on the high-level feature issues yesterday while setting up the new project board.\r\n\r\nYour explanation for why parsing nested links is spot on: we have to parse and not parse at the same time.\r\n\r\nI'm not sure whether reconstructing our remembering the source text is the better option. Hope you can give us insight there.\r\n\r\nAnd, yes, you cannot use `a` tags. Roam entirely uses `span` for their links. See this output hiccup: https://github.com/athensresearch/athens/blob/master/data/nested-link.hiccup.",
      "performed_via_github_app":null
    }
  ]
}
