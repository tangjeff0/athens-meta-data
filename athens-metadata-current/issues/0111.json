{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/111",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/111/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/111/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/111/events",
  "html_url":"https://github.com/athensresearch/athens/pull/111",
  "id":627972290,
  "node_id":"MDExOlB1bGxSZXF1ZXN0NDI1NjE4Mjg4",
  "number":111,
  "title":"Design system",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[],
  "state":"closed",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-05-31 14:16:46 UTC",
  "updated_at":"2020-06-04 12:39:43 UTC",
  "closed_at":"2020-05-31 14:52:38 UTC",
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "pull_request":{
    "url":"https://api.github.com/repos/athensresearch/athens/pulls/111",
    "html_url":"https://github.com/athensresearch/athens/pull/111",
    "diff_url":"https://github.com/athensresearch/athens/pull/111.diff",
    "patch_url":"https://github.com/athensresearch/athens/pull/111.patch"
  },
  "body":"Creating a draft PR to continue discussion with @jeroenvandijk  on [composing styles](https://github.com/athensresearch/athens/commit/4d0b5454c8aaba5df097e6019df5204fce88b9d3#r39553790).\r\n\r\nBasically, I think the interface to `with-style` should be very flexible and intuitive. Accept functions, maps, or nested maps. Accept any arity. \r\n\r\n```\r\n;; All cases should evaluate to the the following vanilla cljs\r\n[:div {:style {:display \"flex\"}}]\r\n\r\n;; map\r\n[:div (with-style {:display \"flex\"})]\r\n\r\n;; nested map\r\n[:div (with-style {:style {:display \"flex\"}})]\r\n\r\n;; using functions\r\n(def +flex (with-style {:display \"flex\"}))\r\n[:div (+flex)]\r\n[:div (with-style +flex)]\r\n[:div (with-style (+flex))]\r\n\r\n\r\n;; Now let's try composing\r\n(def +justify-center (with-style {:justify-content \"center\"}))\r\n(def +align-center (with-style {:align-center \"center\"}))\r\n(def +flex-center (with-style +flex +justify-center +align-center))\r\n\r\n[:div (with-style +flex +justify-center +align-center)]\r\n[:div (with-style (+flex) (+justify-center) (+align-center))]\r\n[:div (+flex-center)]\r\n\r\n\r\n;; Mix and Match\r\n;; 1 - function\r\n;; 2 - called function\r\n;; 3 - map\r\n;; 4 - nested map\r\n[:div (with-style +flex (+align-center) {:justify-content \"center\"} {:style {:text-align \"center\"}})]\r\n\r\n;; Output\r\n[:div {:style {:display \"flex\" :align-items \"center\" :justify-content \"center\" :text-align \"center\"}}]\r\n```",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/636477620",
      "html_url":"https://github.com/athensresearch/athens/pull/111#issuecomment-636477620",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/111",
      "id":636477620,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzNjQ3NzYyMA==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-31 14:19:12 UTC",
      "updated_at":"2020-05-31 14:19:12 UTC",
      "author_association":"MEMBER",
      "body":"Oh, because `(with-style)` always returns a function, if we want to use it inline, we will have to call it twice, e.g. `[:div ((with-style {:display \"flex\"}))]`",
      "performed_via_github_app":null
    }
  ]
}
