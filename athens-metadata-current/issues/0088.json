{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/88",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/88/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/88/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/88/events",
  "html_url":"https://github.com/athensresearch/athens/pull/88",
  "id":623542373,
  "node_id":"MDExOlB1bGxSZXF1ZXN0NDIyMTg5Mzc1",
  "number":88,
  "title":"fix(parsing): fix red parse failures in block contents and refactor parser",
  "user":{
    "login":"roryokane",
    "id":79168,
    "node_id":"MDQ6VXNlcjc5MTY4",
    "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/roryokane",
    "html_url":"https://github.com/roryokane",
    "followers_url":"https://api.github.com/users/roryokane/followers",
    "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
    "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
    "organizations_url":"https://api.github.com/users/roryokane/orgs",
    "repos_url":"https://api.github.com/users/roryokane/repos",
    "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
    "received_events_url":"https://api.github.com/users/roryokane/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[],
  "state":"closed",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-05-23 01:24:15 UTC",
  "updated_at":"2020-06-04 11:00:26 UTC",
  "closed_at":"2020-05-26 15:51:03 UTC",
  "author_association":"CONTRIBUTOR",
  "active_lock_reason":null,
  "pull_request":{
    "url":"https://api.github.com/repos/athensresearch/athens/pulls/88",
    "html_url":"https://github.com/athensresearch/athens/pull/88",
    "diff_url":"https://github.com/athensresearch/athens/pull/88.diff",
    "patch_url":"https://github.com/athensresearch/athens/pull/88.patch"
  },
  "body":"(This code is theoretically finished but I want to double-check it after a good night's sleep before I ask for a review and merge.)\r\n\r\nBefore:\r\n\r\n![before fixing parsing](https://user-images.githubusercontent.com/79168/82718697-04dcb780-9c72-11ea-8209-45bd4a5c9725.png)\r\n\r\nAfter:\r\n\r\n![after fixing parsing](https://user-images.githubusercontent.com/79168/82718700-0908d500-9c72-11ea-8dc0-befd39ec112f.png)\r\n\r\nThe parse failures were because lines beginning with punctuation such as `{` were neither word characters (`\\w`) or space characters (`\\s`). I fixed that with the `any-char` rule.\r\n\r\nThe `any-char` rule matches `\\w\\W` instead of `.` to ensure it also matches newlines, no matter how Clojure and ClojureScript’s regexes work. This is desired in normal text, but probably not in links and hash-tags. That’s one reason for my comment about planning to move away from the `any-chars` rule.\r\n\r\nI could have fixed it by just changing the `c` regexp to `#'(\\\\w|\\\\W)+'`, but that would lead to other problems down the line. See https://github.com/Engelberg/instaparse#regular-expressions-a-word-of-warning. The downside of doing it repetition in the parser is that I need to combine the individually-matched characters in the transformer later, with `join` and `combine-adjacent-strings`.\r\n\r\nOther changes:\r\n\r\n- Use clearer names for the parts of the parser\r\n- Use `defparser` to precompile the parser for ClojureScript (following the advice in https://github.com/Engelberg/instaparse#defparser)\r\n- Add classes to output elements to aid in future styling and debugging\r\n- more changes from later commits I will squash",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633153212",
      "html_url":"https://github.com/athensresearch/athens/pull/88#issuecomment-633153212",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/88",
      "id":633153212,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzE1MzIxMg==",
      "user":{
        "login":"roryokane",
        "id":79168,
        "node_id":"MDQ6VXNlcjc5MTY4",
        "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/roryokane",
        "html_url":"https://github.com/roryokane",
        "followers_url":"https://api.github.com/users/roryokane/followers",
        "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
        "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
        "organizations_url":"https://api.github.com/users/roryokane/orgs",
        "repos_url":"https://api.github.com/users/roryokane/repos",
        "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
        "received_events_url":"https://api.github.com/users/roryokane/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-23 23:23:28 UTC",
      "updated_at":"2020-05-23 23:23:28 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Ready for review. If you approve the PR, give me a chance to squash one of the commits before you merge.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633164597",
      "html_url":"https://github.com/athensresearch/athens/pull/88#issuecomment-633164597",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/88",
      "id":633164597,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzE2NDU5Nw==",
      "user":{
        "login":"roryokane",
        "id":79168,
        "node_id":"MDQ6VXNlcjc5MTY4",
        "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/roryokane",
        "html_url":"https://github.com/roryokane",
        "followers_url":"https://api.github.com/users/roryokane/followers",
        "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
        "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
        "organizations_url":"https://api.github.com/users/roryokane/orgs",
        "repos_url":"https://api.github.com/users/roryokane/repos",
        "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
        "received_events_url":"https://api.github.com/users/roryokane/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-24 01:45:23 UTC",
      "updated_at":"2020-05-24 01:46:06 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"I mentioned in one of the commit messages that I didn’t see a good alternative to parsing one character at a time in some places and then combining those characters later in the `transform` section. Sadly this makes the parse results not that useful on their own, as you can see from the [tests in `test/athens/parser_test.clj`](https://github.com/athensresearch/athens/pull/88/files#diff-8830251d7eccb717d83a04b404df4f59R7):\r\n\r\n~~~clj\r\n  (is (= [:block \"O\" \"K\" \"?\" \" \" \"Y\" \"e\" \"s\" \".\"] (block-parser \"OK? Yes.\")))\r\n  (is (= [:block [:block-link [:any-chars \"l\" \"i\" \"n\" \"k\"]]] (block-parser \"[[link]]\")))\r\n~~~\r\n\r\nIf we wanted the parse tree to be more like a generic AST that could have more things done to it than just rendering to Hiccup, we could introduce a **second transform step** that just combines individual characters, leaving the other transform step completely in charge of Hiccup. This would make the parsing tests easier to write too.\r\n\r\nI didn’t do that yet for two reasons:\r\n\r\n- It would make parsing slower: the tree would have to be walked twice instead of once.\r\n- I’m not sure how else the parse tree might change. I can see avenues to making the sub-rules like `block-link` parse contents as a single string, though I don’t currently see a way to avoid that for the top-level `block` rule. Because of these potential changes, this hypothetical splitting of transform steps might not be in the code long enough to be worth writing.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/633728832",
      "html_url":"https://github.com/athensresearch/athens/pull/88#issuecomment-633728832",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/88",
      "id":633728832,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYzMzcyODgzMg==",
      "user":{
        "login":"roryokane",
        "id":79168,
        "node_id":"MDQ6VXNlcjc5MTY4",
        "avatar_url":"https://avatars0.githubusercontent.com/u/79168?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/roryokane",
        "html_url":"https://github.com/roryokane",
        "followers_url":"https://api.github.com/users/roryokane/followers",
        "following_url":"https://api.github.com/users/roryokane/following{/other_user}",
        "gists_url":"https://api.github.com/users/roryokane/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/roryokane/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/roryokane/subscriptions",
        "organizations_url":"https://api.github.com/users/roryokane/orgs",
        "repos_url":"https://api.github.com/users/roryokane/repos",
        "events_url":"https://api.github.com/users/roryokane/events{/privacy}",
        "received_events_url":"https://api.github.com/users/roryokane/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-25 22:08:25 UTC",
      "updated_at":"2020-05-25 22:13:25 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Ready for merge. (Edit: whoops, I rebased on an older version of the `master` branch; rebasing again.)\r\n\r\n> When we sort out styling and html structure, probably good to add tests for text -> hiccup result\r\n\r\nYeah, some tests like that will probably be useful eventually. Note that those tests will be somewhat difficult to write: they will need to mock the re-frame/posh database since `transform` uses `re-frame.core/subscribe` to embed data into the Hiccup result.",
      "performed_via_github_app":null
    }
  ]
}
