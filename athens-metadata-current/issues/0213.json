{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/213",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/213/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/213/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/213/events",
  "html_url":"https://github.com/athensresearch/athens/issues/213",
  "id":650920184,
  "node_id":"MDU6SXNzdWU2NTA5MjAxODQ=",
  "number":213,
  "title":"Fix,refactor(all-pages): `date-string` fn",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[
    {
      "id":1947284692,
      "node_id":"MDU6TGFiZWwxOTQ3Mjg0Njky",
      "url":"https://api.github.com/repos/athensresearch/athens/labels/type:%20%F0%9F%90%9E%20bug",
      "name":"type: 🐞 bug",
      "color":"0075ca",
      "default":false,
      "description":"Something isn't working"
    }
  ],
  "state":"closed",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-07-04 16:36:40 UTC",
  "updated_at":"2020-07-05 15:42:28 UTC",
  "closed_at":"2020-07-05 15:42:28 UTC",
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "body":"Originally written by @estellerostan in #169 \r\n\r\n# Problem\r\n\r\nOutput of `date-string` is sometimes incorrect.\r\n\r\n```\r\n(date-string 1593878525897)\r\n; => \"July 07, 2020 12:2pm\"\r\n```\r\n\r\n# To Reproduce\r\n\r\nOpen Athens with `ego` db. Take a look at some of the values.\r\n\r\n![Screen Shot 2020-07-04 at 12 31 30 PM](https://user-images.githubusercontent.com/8952138/86516868-4bd1d700-bdf2-11ea-85c9-8b155aa86e98.png)\r\n\r\n**Steps**\r\n\r\n- Idiomatically:\r\n  - create a separate `def` for the `date-col-format`\r\n  - refactor the current function to use `as->` thread macro\r\n- Practically:\r\n  - How is the `(< ts 1)` supposed to work? `ts` can either by a timestamp integer or `nil`, if I'm not mistaken. I'm not sure this is the best predicate.\r\n\r\n```\r\n(def date-col-format (t/formatter \"LLLL MM, yyyy h':'ma\"))\r\n\r\n(defn date-string\r\n  [ts]\r\n  (if (< ts 1)\r\n    [:span \"(unknown date)\"]\r\n    (as-> (js/Date. ts) x\r\n      (t/instant x)\r\n      (t/date-time x)\r\n      (t/format date-col-format x)\r\n      (str/replace x #\"AM\" \"am\")\r\n      (str/replace x #\"PM\" \"pm\"))))\r\n```",
  "performed_via_github_app":null
}
