{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/31",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/31/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/31/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/31/events",
  "html_url":"https://github.com/athensresearch/athens/issues/31",
  "id":613668016,
  "node_id":"MDU6SXNzdWU2MTM2NjgwMTY=",
  "number":31,
  "title":"Implement \"import JSON from Roam\"",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[],
  "state":"open",
  "locked":false,
  "assignee":null,
  "assignees":[],
  "milestone":null,
  "created_at":"2020-05-06 23:11:40 UTC",
  "updated_at":"2020-07-21 15:57:21 UTC",
  "closed_at":null,
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "body":"Assigned to @jeroenvandijk \r\n\r\nThis issue covers importing **only Roam**'s JSON export.\r\n\r\nRequires generating `:block/uid`s for pages since Roam's export lacks them... ü§∑‚Äç‚ôÇÔ∏èüßê\r\n\r\nAlso, there are some properties in the JSON that may need to be omitted otherwise the datascript transaction throws an exception. Consider using `clojure.spec`, `specter`, or something like that to ignore non-essential attributes for now.\r\n\r\n- map JSON fields to attributes, using https://github.com/athensresearch/athens/blob/master/src/cljs/athens/db.cljs#L8-L25\r\n- add to or refactor https://github.com/athensresearch/athens/blob/master/src/cljs/athens/db.cljs#L30-L39\r\n- file upload should accept multiple file formats and shapes of data. Again, something like `clojure.spec` can be used to determine the shape of the data: https://github.com/athensresearch/athens/blob/master/src/cljs/athens/db.cljs#L57-L63\r\n- Attribute reference: https://www.notion.so/athensresearch/Datascript-Attribute-Table-afd0e5c9556b404880a0b149f87e9d6d",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/626045978",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-626045978",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":626045978,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNjA0NTk3OA==",
      "user":{
        "login":"jeroenvandijk",
        "id":27645,
        "node_id":"MDQ6VXNlcjI3NjQ1",
        "avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jeroenvandijk",
        "html_url":"https://github.com/jeroenvandijk",
        "followers_url":"https://api.github.com/users/jeroenvandijk/followers",
        "following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}",
        "gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions",
        "organizations_url":"https://api.github.com/users/jeroenvandijk/orgs",
        "repos_url":"https://api.github.com/users/jeroenvandijk/repos",
        "events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jeroenvandijk/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-08 22:22:57 UTC",
      "updated_at":"2020-05-08 22:22:57 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"@tangjeff0 I did some exploratory work. I pretty printed the json dump and I did some analysis on the attributes https://gist.github.com/jeroenvandijk/6713bf0af4fe5bc82ebf4a261766537b#file-pretty_print_json_export-edn\r\n\r\nI think there is more information in the dump than you thought? For instance, in many cases there is a `:block/uid`, but it's at not at the top level, only under children it seems. Also in the diagrams many things are actually uid (e.g. `from`, `to`, `id`, maybe more).\r\n\r\nMight take some time to get this right. Maybe we can do a cross reference with your datom export to make sure we are not missing any data.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/626050672",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-626050672",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":626050672,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNjA1MDY3Mg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-08 22:41:30 UTC",
      "updated_at":"2020-05-08 22:41:30 UTC",
      "author_association":"MEMBER",
      "body":"Yeah, last I recall `:block/uid` was present for all child blocks, but not for some pages. I didn't dig into diagrams, but all of them use blocks under the hood. You can see how that would look in datoms [here](https://www.notion.so/athensresearch/Attribute-Table-afd0e5c9556b404880a0b149f87e9d6d?p=f4705c341930497da2e414f72c517868).",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/627268083",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-627268083",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":627268083,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyNzI2ODA4Mw==",
      "user":{
        "login":"jeroenvandijk",
        "id":27645,
        "node_id":"MDQ6VXNlcjI3NjQ1",
        "avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jeroenvandijk",
        "html_url":"https://github.com/jeroenvandijk",
        "followers_url":"https://api.github.com/users/jeroenvandijk/followers",
        "following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}",
        "gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions",
        "organizations_url":"https://api.github.com/users/jeroenvandijk/orgs",
        "repos_url":"https://api.github.com/users/jeroenvandijk/repos",
        "events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jeroenvandijk/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-12 10:54:52 UTC",
      "updated_at":"2020-05-12 10:55:16 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Making some progress with Meander ([gist](https://gist.github.com/jeroenvandijk/62e3a52550f3aef5b69e4f0e91b73d18#file-meander_import-clj-L19-L82)) \r\n\r\nIt's not there yet, it's still missing some mapping, but slowly getting there. I think/hope it's a matter of understanding Meander better. The expected result is a self-explaining import script. \r\n\r\nI'm asking for help in the #meander slack channel",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/628605803",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-628605803",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":628605803,
      "node_id":"MDEyOklzc3VlQ29tbWVudDYyODYwNTgwMw==",
      "user":{
        "login":"jeroenvandijk",
        "id":27645,
        "node_id":"MDQ6VXNlcjI3NjQ1",
        "avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jeroenvandijk",
        "html_url":"https://github.com/jeroenvandijk",
        "followers_url":"https://api.github.com/users/jeroenvandijk/followers",
        "following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}",
        "gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions",
        "organizations_url":"https://api.github.com/users/jeroenvandijk/orgs",
        "repos_url":"https://api.github.com/users/jeroenvandijk/repos",
        "events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jeroenvandijk/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-05-14 12:38:04 UTC",
      "updated_at":"2020-05-14 12:38:58 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Some more WIP and background here:\r\n\r\n- https://clojurians-log.clojureverse.org/meander/2020-05-11\r\n- https://clojurians-log.clojureverse.org/meander/2020-05-12\r\n\r\nTransformation is more or less complete. Next step is getting it in the right shape to transact to Datascript",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/652483385",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-652483385",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":652483385,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MjQ4MzM4NQ==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-01 15:21:36 UTC",
      "updated_at":"2020-07-01 15:31:32 UTC",
      "author_association":"NONE",
      "body":"@jeroenvandijk @tangjeff0 I have been thinking of this for a while & following along on discord, but I have a couple of ideas here:\r\n\r\n1. Instead of supporting roam JSON (which has incomplete info, as you mention, page UIDs are missing), why don't we just use the query method? (there's `window.roamAlphaApi` for this)\r\n    - The advantage: we get the whole data\r\n    - I can see concerns with this method being hard to use, but we can easily build this into a browser extension using `window.roamAlphaApi.q`, say [roam-toolkit](https://github.com/roam-unofficial/roam-toolkit),(or a tiny one of our own/a small script)\r\n\r\n\r\n2. There are other ways to get data out - for eg by taking a dump of the local indexeddb - this might be a useful idea for exporting stuff from Athens itself ( #98 )\r\n   - For example, the [memex](https://getmemex.com/) extension by worldbrain, they ask you to download and run a local server & save files to your hard drive - it's basically a dump of the db which works on import\r\n\r\n    -  they use [worldbrain/storex](https://github.com/WorldBrain/storex) for this, which is a way to descrive schema which can talk across types of DBs/devices. For example, you can have the same db running on both browser's indexedDb (via Dexie) * SQLite in React-native ([sorex docs](https://worldbrain.github.io/storex-docs/#/guides/quickstart/)). They also have something called storex-sync in the works for cross device syncing of this data, offline (via a local server)\r\n\r\n\r\n   - also, memex runs completely offline, only on indexedDb, so that shows how powerful idxDb can be\r\n\r\n\r\nPlease lmk thoughts on this. I would like to contribute to this area :)",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/652677265",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-652677265",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":652677265,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MjY3NzI2NQ==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-01 22:28:46 UTC",
      "updated_at":"2020-07-01 22:29:13 UTC",
      "author_association":"MEMBER",
      "body":"@palashkaria I think `roam-toolkit` could be a great solution if we decide to go with `roamAlphaApi`. The only problem here is that this export is not perfect. If you look at the return value of `roamAlphaApi.q`, you can see we lose all the namespaces for attributes.\r\n\r\n- This means we don't know if the attribute `\"time\"` maps to `:edit/time` or `:create/time`. \r\n- We don't know if `\"email\"` maps to `:create/email` or `:edit/email`.\r\n\r\nOn the plus, this export seems to export data structures well like the `refs` attribute, which is a set of 3 vectors.\r\n\r\nThere may be other export issues I'm not aware of. If we can find an interoperable example of each attribute [described in Notion](https://www.notion.so/athensresearch/Datascript-Attribute-Table-afd0e5c9556b404880a0b149f87e9d6d), I'm happy to use this method. I don't think `:x/email` or `:x/time` attributes are that important ultimately. I think `:block/uid`, `:node/title`, `:block/string`, `:block/order`, `:block/children` are the most important, which all seem to work.\r\n\r\n---\r\n\r\nRegarding your second point, I love worldbrain. How do we query and pull data from IndexedDB? If we can get it out in datom format, that'd be great!",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653057510",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653057510",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653057510,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA1NzUxMA==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 14:59:22 UTC",
      "updated_at":"2020-07-02 15:11:55 UTC",
      "author_association":"NONE",
      "body":"@tangjeff0 to get around that, we can use `.pull`, maybe; Something like this:\r\n\r\n```\r\nconst data = window.roamAlphaAPI.q(`[:find ?e :where [?e ?a ?v]]`).map(dbId =>  {\r\n\r\n\treturn window.roamAlphaAPI.pull('[*]', dbId[0]))`;\r\n\r\n});\r\n```\r\n\r\n\r\nthis will give an array of such objects\r\n\r\n```\r\n:block/uid: \"MKCclfcvD\",\r\n:create/email: \"example@gmail.com\",\r\n:create/time: 1593616207301,\r\n:db/id: 94,\r\n:edit/email: \"example@gmail.com\",\r\n:edit/time: 1593616207302,\r\n:node/title: \"roam/css\",\r\n\r\n\r\n:block/open: false\r\n:block/order: 39\r\n:block/string: \"    - <3\"\r\n:block/uid: \"QP_YnHL-l\"\r\n:create/email: \"example@gmail.com\"\r\n:create/time: 1591331394897\r\n:db/id: 68\r\n:edit/email: \"example@gmail.com\"\r\n:edit/time: 1593616207210\r\n```\r\nAlthough I think it might be possible to do it in one query too; not quite sure how.\r\n\r\n(Just trying out a pull inside `.q` did not work)\r\n\r\n```\r\nwindow.roamAlphaAPI.q(`[:find (pull ?e []) :where [?e ?a ?v]]`)\r\n```",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653065490",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653065490",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653065490,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA2NTQ5MA==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 15:12:16 UTC",
      "updated_at":"2020-07-02 15:19:20 UTC",
      "author_association":"MEMBER",
      "body":"Wow, great idea using pull syntax. This `q-map-pull` works perfectly! @palashkaria \r\n\r\n```\r\nroamAlphaAPI.q(`[:find [?e ...] :where [?e _ _]]`).map(e => roamAlphaAPI.pull('[*]', e))\r\n```\r\n\r\nWant to begin making the `roam-toolkit` plugin?\r\n\r\nFYI the way to do it one query is:\r\n```\r\nroamAlphaAPI.q(`\r\n[:find [(pull ?e [*] ) ...]\r\n :where [?e ?a ?v]]`)\r\n```\r\n\r\nBut this again loses the namespace attributes üò¢  but we can still use your JS `map` idea\r\n\r\nHow about `IndexedDB`? What can we pull from there?",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653066315",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653066315",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653066315,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA2NjMxNQ==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 15:13:44 UTC",
      "updated_at":"2020-07-02 15:19:47 UTC",
      "author_association":"NONE",
      "body":"@tangjeff0 is this all the data? The prev query was missing some stuff I think; could you test this one out?\r\n\r\n\r\n```\r\n\r\nwindow.roamAlphaAPI.q(`[:find ?e ?a ?v :where [?e ?a ?v]]`).map(x => window.roamAlphaAPI.pull('[*]', x[0]))\r\n\r\n\r\n```\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653069269",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653069269",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653069269,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA2OTI2OQ==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 15:19:06 UTC",
      "updated_at":"2020-07-02 15:20:17 UTC",
      "author_association":"NONE",
      "body":"@tangjeff0 IndexDb is pretty involved, & can look very weird with roam internals exposed\r\nYou can go to your Application tab in inspect > storage & look at dbs there. What these are useful for is to make a backup of your whole roam db etc\r\n\r\nan example of db data\r\n\r\n```\r\n\r\n\r\ntx: \"[[\"~:db.fn/retractAttribute\",[\"~:block/uid\",\"jjXiTSxJe\"],\"~:block/refs\"],[\"^ \",\"^1\",\"jjXiTSxJe\",\"^2\",[[\"^ \",\"^1\",\"MfxMc1zIG\"]]]]\"\r\n\r\n\r\ntx: \"[[\"~:db/add\",\"uuid4236c39a-e712-xxxx-xxxx-9ecb03ec833e\",\"~:block/uid\",\"Vrv2DiaVE\"],[\"^ \",\"^1\",\"jjXiTSxJe\",\"~:block/children\",[[\"^ \",\"~:block/string\",\"\",\"~:create/email\",\"example@gmail.com\",\"~:create/time\",1593104696364,\"^1\",\"Vrv2DiaVE\",\"~:block/open\",true,\"~:edit/time\",1593104696364,\"~:db/id\",\"uuid4236c39a-xxx-xxx-bac0-9ecb03ec833e\",\"~:edit/email\",\"example@gmail.com\",\"~:block/order\",1]]]]\"\r\n\r\n--\r\n\r\n```\r\n\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653070877",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653070877",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653070877,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA3MDg3Nw==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 15:22:05 UTC",
      "updated_at":"2020-07-02 15:23:44 UTC",
      "author_association":"NONE",
      "body":"Also, please test out the query with more kinds of things - I am unable to verify if everything in notion works properly with this - do we have a validator of any kind? Maybe just importing into athens?\r\n\r\n\r\nI'll also figure out the roam-toolkit part if this pans out.\r\n\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653079502",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653079502",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653079502,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA3OTUwMg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 15:38:35 UTC",
      "updated_at":"2020-07-02 15:38:35 UTC",
      "author_association":"MEMBER",
      "body":"Please provide the JS necessary to access the IndexedDB data. We can compare `window.roamAlphaApi` with the IndexedDB data.\r\n\r\nWhat you showed me are not Roam internals. In fact, I believe it is [datascript-transit](https://github.com/tonsky/datascript-transit/blob/master/src/datascript/transit.clj). Athens uses the same thing but with localStorage right now:\r\n\r\n![Screen Shot 2020-07-02 at 11 36 55 AM](https://user-images.githubusercontent.com/8952138/86379058-58222c80-bc58-11ea-97ff-91442df691f9.png)\r\n \r\nWe can compare data from these two sources. If they are the same, then it is a perfect export. @palashkaria ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653085095",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653085095",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653085095,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA4NTA5NQ==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 15:49:18 UTC",
      "updated_at":"2020-07-02 15:49:18 UTC",
      "author_association":"MEMBER",
      "body":"(But I‚Äôm pretty confident that `q-map-pull` works as expected)",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653100806",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653100806",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653100806,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzEwMDgwNg==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 16:16:21 UTC",
      "updated_at":"2020-07-02 16:16:34 UTC",
      "author_association":"NONE",
      "body":"@tangjeff0 ah yes, so that's all there is but no direct schema/datom exports. We can export these transaction dbs using `[Dexie](https://github.com/dfahlander/Dexie.js/)`, as blobs, somewhat like this:\r\n\r\n```\r\nimport {exportDB} from 'dexie-export-import';\r\nimport Dexie from 'dexie';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\nDexie.getDatabaseNames(dbNames => {\r\n\tdbNames.forEach((dbName) => {\r\n\t\tconst db = new Dexie(dbName);\r\n\t\tdb.open().then(() => {\r\n\t\t\texportDB(db).then(blob => {\r\n\t\t\t\tsaveAs(blob, `${dbName}.json`);\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n})\r\n\r\n```\r\n\r\nNote: This will download a lot of files - your browser will probably warn you\r\n\r\n - Also, a side note localstorage is synchronous, so it would be slow, indexedDb might be be a better idea for athens eventually (I suggested using it with Dexie.js)\r\n\r\nhttps://web.dev/storage-for-the-web/#other",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653101855",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653101855",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653101855,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzEwMTg1NQ==",
      "user":{
        "login":"palashkaria",
        "id":2976363,
        "node_id":"MDQ6VXNlcjI5NzYzNjM=",
        "avatar_url":"https://avatars2.githubusercontent.com/u/2976363?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/palashkaria",
        "html_url":"https://github.com/palashkaria",
        "followers_url":"https://api.github.com/users/palashkaria/followers",
        "following_url":"https://api.github.com/users/palashkaria/following{/other_user}",
        "gists_url":"https://api.github.com/users/palashkaria/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/palashkaria/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/palashkaria/subscriptions",
        "organizations_url":"https://api.github.com/users/palashkaria/orgs",
        "repos_url":"https://api.github.com/users/palashkaria/repos",
        "events_url":"https://api.github.com/users/palashkaria/events{/privacy}",
        "received_events_url":"https://api.github.com/users/palashkaria/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 16:18:32 UTC",
      "updated_at":"2020-07-02 16:21:06 UTC",
      "author_association":"NONE",
      "body":"@tangjeff0 all considered, let's go ahead with `q-map-pull` itself (although it might be a bit slow because iterations)\r\n\r\nYou are sure there's no way to get namespaces with attributes in pull-expr? I tried searching for that, but I'm just a beginner at datascript; nothing in the datalog docs around this",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653137422",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-653137422",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":653137422,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzEzNzQyMg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-02 17:37:34 UTC",
      "updated_at":"2020-07-02 17:38:00 UTC",
      "author_association":"MEMBER",
      "body":"@palashkaria The datalog semantics are correct. The issue is that namespaced keywords are mostly a Clojure (`edn`) construct that requires additional serialization to export to JSON.\r\n\r\n[Namespaced keywords are considered harmful by some](https://vvvvalvalval.github.io/posts/clojure-key-namespacing-convention-considered-harmful.html).\r\n\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/661067375",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-661067375",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":661067375,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2MTA2NzM3NQ==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-20 14:16:14 UTC",
      "updated_at":"2020-07-21 15:53:56 UTC",
      "author_association":"MEMBER",
      "body":"@palashkaria implemented lossless import in #288. Feel free to start on the roam-toolkit plugin!",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/661947116",
      "html_url":"https://github.com/athensresearch/athens/issues/31#issuecomment-661947116",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/31",
      "id":661947116,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY2MTk0NzExNg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-21 15:57:21 UTC",
      "updated_at":"2020-07-21 15:57:21 UTC",
      "author_association":"MEMBER",
      "body":"I would also understand if you didn't want to put this directly in roam-toolkit, so we could just make this a small script as you also suggested in https://github.com/athensresearch/athens/issues/31#issuecomment-652483385. But you (and @stvad) are the main contributors there so I'll let you decide.",
      "performed_via_github_app":null
    }
  ]
}
