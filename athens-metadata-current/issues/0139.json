{
  "url":"https://api.github.com/repos/athensresearch/athens/issues/139",
  "repository_url":"https://api.github.com/repos/athensresearch/athens",
  "labels_url":"https://api.github.com/repos/athensresearch/athens/issues/139/labels{/name}",
  "comments_url":"https://api.github.com/repos/athensresearch/athens/issues/139/comments",
  "events_url":"https://api.github.com/repos/athensresearch/athens/issues/139/events",
  "html_url":"https://github.com/athensresearch/athens/issues/139",
  "id":635735674,
  "node_id":"MDU6SXNzdWU2MzU3MzU2NzQ=",
  "number":139,
  "title":"Datascript DevTools",
  "user":{
    "login":"tangjeff0",
    "id":8952138,
    "node_id":"MDQ6VXNlcjg5NTIxMzg=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/tangjeff0",
    "html_url":"https://github.com/tangjeff0",
    "followers_url":"https://api.github.com/users/tangjeff0/followers",
    "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
    "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
    "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
    "repos_url":"https://api.github.com/users/tangjeff0/repos",
    "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
    "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
    "type":"User",
    "site_admin":false
  },
  "labels":[
    {
      "id":2092478123,
      "node_id":"MDU6TGFiZWwyMDkyNDc4MTIz",
      "url":"https://api.github.com/repos/athensresearch/athens/labels/type:%20%F0%9F%9A%80%20feature",
      "name":"type: ðŸš€ feature",
      "color":"0075ca",
      "default":false,
      "description":"Must be on https://github.com/athensresearch/athens/projects/2"
    }
  ],
  "state":"closed",
  "locked":false,
  "assignee":{
    "login":"jelmerderonde",
    "id":2357145,
    "node_id":"MDQ6VXNlcjIzNTcxNDU=",
    "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/jelmerderonde",
    "html_url":"https://github.com/jelmerderonde",
    "followers_url":"https://api.github.com/users/jelmerderonde/followers",
    "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
    "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
    "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
    "repos_url":"https://api.github.com/users/jelmerderonde/repos",
    "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
    "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
    "type":"User",
    "site_admin":false
  },
  "assignees":[
    {
      "login":"jelmerderonde",
      "id":2357145,
      "node_id":"MDQ6VXNlcjIzNTcxNDU=",
      "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
      "gravatar_id":"",
      "url":"https://api.github.com/users/jelmerderonde",
      "html_url":"https://github.com/jelmerderonde",
      "followers_url":"https://api.github.com/users/jelmerderonde/followers",
      "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
      "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
      "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
      "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
      "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
      "repos_url":"https://api.github.com/users/jelmerderonde/repos",
      "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
      "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
      "type":"User",
      "site_admin":false
    }
  ],
  "milestone":null,
  "created_at":"2020-06-09 20:30:34 UTC",
  "updated_at":"2020-07-04 19:16:49 UTC",
  "closed_at":"2020-07-04 19:16:48 UTC",
  "author_association":"MEMBER",
  "active_lock_reason":null,
  "body":"We currently have [re-frame-10x](https://github.com/day8/re-frame-10x#use-cases) setup, but it doesn't work with re-posh, which is one reason we are relying less on re-frame and re-posh (#95). \r\n\r\nSimilar tools in this space are [fulcro-inspect](https://github.com/fulcrologic/fulcro-inspect) ([demo](https://youtu.be/yyVKf2U8YVg?t=1747)), [redux-devtools](https://github.com/reduxjs/redux-devtools), and [Elm debugger (demo)](https://www.youtube.com/watch?v=RUeLd7T7Xi4).\r\n\r\nWe do not need every dev tool feature like performance statistics.\r\n\r\nWhat we do want is:\r\n\r\n- watchers: datascript entity/q/pull queries should update visibly and reactively if the db is updated\r\n- transactions: all the things we can expect from Datomic â€” datoms (assertions or retractions), before and after diffs, timestamps, etc.\r\n- time-travel: one of the best features of immutability :)\r\n\r\nI'm not exactly sure the best implementation strategy. Options I can think of off the top of my head:\r\n\r\n- make our own developer sidebar â€” easiest IMO\r\n- fork and instrument re-frame-10x ourselves â€” not a good idea IMO, don't want to look at their code, and we are divesting from re-frame\r\n- make our own Chrome Extension â€” most powerful, but we don't need to leverage custom tabs in Chrome yet",
  "performed_via_github_app":null,
  "comments":[
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/643159351",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-643159351",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":643159351,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0MzE1OTM1MQ==",
      "user":{
        "login":"jelmerderonde",
        "id":2357145,
        "node_id":"MDQ6VXNlcjIzNTcxNDU=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jelmerderonde",
        "html_url":"https://github.com/jelmerderonde",
        "followers_url":"https://api.github.com/users/jelmerderonde/followers",
        "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
        "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
        "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
        "repos_url":"https://api.github.com/users/jelmerderonde/repos",
        "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-12 08:57:15 UTC",
      "updated_at":"2020-06-14 13:08:41 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Some initial thoughts on implementing this:\r\n- `posh` seems to provide the watchers we want. Its functions return a Reagent Reaction that can be observed by components that will reactively update when the db changes.\r\n- We can watch datascript transactions using datascript's `listen!`. It should be easy enough to display the transaction reports in some ui.\r\n- Time travel also seems reasonably easy, at least in the context of the datascript database: we can reset the database using `reset-conn!` with an earlier database value `:db-before` from the transaction reports we collect using `listen!`.\r\n\r\n# Questions\r\n- I'm unsure how much I can reuse from the Datascript explorer (#67). Maybe it is as simple as replacing the datascript `q`, `entity` and `pull` functions with their `posh` equivalents. But it seems unlikely that the returned Reaction will survive the transition from `sci`. Will have to experiment with this.\r\n- Another open question is how to visualize all these elements. UI design is not my strongest point ðŸ˜‰.\r\n- The whole thing becomes more complex if we also want to monitor other parts of the state (those not in the datascript db). Is that something we want?\r\n- For now I'm proceeding with the idea of turning it into a developer sidebar. But if there are good arguments for a Chrome Extension I can look at that too (although I prefer Firefox myself).\r\n\r\n# Discovered\r\n- [x] Monitor the datascript `conn` using `listen!`, collect transaction reports and display them.\r\n- [x] Implement time travel using `reset-conn!`.\r\n- [x] Experiment with `sci` and `posh`.\r\n\r\nI will proceed with some small experiments to check if my assumptions are correct and how `sci` and `posh` function together.\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/643324303",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-643324303",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":643324303,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0MzMyNDMwMw==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-12 15:08:27 UTC",
      "updated_at":"2020-06-12 15:08:27 UTC",
      "author_association":"MEMBER",
      "body":"- > I'm unsure how much I can reuse from the Datascript explorer\r\n  - Yeah, I'm not sure if we can reuse too much code there, or how well sci and posh play together.\r\n- > how to visualize all these elements\r\n  - Just show the dataâ„¢. All the dev tools above, REBL, Datomic Console, etc. are just simple layouts, inputs, and tables. Once we have the data, I don't think it will take @athensresearch/designers long at all to do UX.\r\n- > The whole thing becomes more complex if we also want to monitor other parts of the state (those not in the datascript db). Is that something we want?\r\n  - We can still use re-frame-10x! Not mutually exclusive.\r\n- > For now I'm proceeding with the idea of turning it into a developer sidebar.\r\n  - Apparently, it's becoming easier to develop cross-browser extensions. But what if we use tauri ðŸ˜‰ \r\n\r\n@jelmerderonde ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/643767311",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-643767311",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":643767311,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0Mzc2NzMxMQ==",
      "user":{
        "login":"jelmerderonde",
        "id":2357145,
        "node_id":"MDQ6VXNlcjIzNTcxNDU=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jelmerderonde",
        "html_url":"https://github.com/jelmerderonde",
        "followers_url":"https://api.github.com/users/jelmerderonde/followers",
        "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
        "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
        "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
        "repos_url":"https://api.github.com/users/jelmerderonde/repos",
        "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-14 13:33:22 UTC",
      "updated_at":"2020-06-20 15:34:20 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Alright, more updates!\r\n\r\n- `sci` and `posh` seem to work fine together. If you return a `Reaction` from an eval done by `sci` it still triggers updates when new transactions occur.\r\n- I've got basic time travel working, although I do have some reservations about the way it is implemented now. Datascript's `reset-conn!` function basically creates a transaction that (1) removes all existing datoms and (2) creates the datoms from the `db`-value you pass it. A cleaner solution probably exists.\r\n- Because reuse of code from the Datascript Exlorer (#67) was possible, I've refactored the browser component into a seperate namespace (`athens.devcards.data-browser`).\r\n\r\n# Discussion\r\n- To some extent the data browser obfuscates the actual data. It renders data into rows and columns, but hides the actual shape of the data. For the Datascript explorer this might have been ok, but for a development tool this could be problematic. REBL and other data browsers have some solutions that we could use, like showing what function is used to render the data (for example `coll-of-maps` or `tuples`).\r\n- Refactoring the data browser exposed some things that could be better. It should be simple for the caller to provide rendering functions for rows and cells.\r\n- Posh has different query semantics, as @tangjeff0 noted earlier: https://github.com/athensresearch/athens/issues/95#issuecomment-642683723. This could be confusing if you're expecting datascript semantics.\r\n- Using `sci` allows users to do other transformations. This could be a valuable feature, but complicates watches, because user defined transformation do not necessarily return `Reactions`.\r\n\r\nThere might be a simple (and possibly naive) way to deal with the last two points: don't use `posh` for querying, just supply the datascript functions in the `sci` bindings. Instead, we just re-evaluate the query every time a datascript transaction occurs. This is less sophisticated, because re-evaluating will occur even if the will query return the same results.\r\n\r\n# Discovered\r\n- [x] Improve the data browser: show the renderer that's used\r\n- [x] Research how other devtools implement data browsing\r\n- [ ] Create a list/detail view for the transaction panel\r\n- [ ] Research other ways of implementing time-travel\r\n- [x] Try out the naive way to implement watchable queries?\r\n",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/643795141",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-643795141",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":643795141,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0Mzc5NTE0MQ==",
      "user":{
        "login":"jelmerderonde",
        "id":2357145,
        "node_id":"MDQ6VXNlcjIzNTcxNDU=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jelmerderonde",
        "html_url":"https://github.com/jelmerderonde",
        "followers_url":"https://api.github.com/users/jelmerderonde/followers",
        "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
        "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
        "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
        "repos_url":"https://api.github.com/users/jelmerderonde/repos",
        "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-14 17:13:25 UTC",
      "updated_at":"2020-06-14 17:13:25 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"> There might be a simple (and possibly naive) way to deal with the last two points: don't use posh for querying, just supply the datascript functions in the sci bindings. Instead, we just re-evaluate the query every time a datascript transaction occurs. This is less sophisticated, because re-evaluating will occur even if the will query return the same results.\r\n\r\n@tangjeff0 what do you think about this solution?",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/643795571",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-643795571",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":643795571,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0Mzc5NTU3MQ==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-14 17:16:52 UTC",
      "updated_at":"2020-06-14 17:16:52 UTC",
      "author_association":"MEMBER",
      "body":"@jelmerderonde in general I have a bias towards quick, naive first passes. \n\nIn this case, definitely go for it. Posh doesnâ€™t offer full datascript features anyways. I mentioned lack of pull in query. But it also doesnâ€™t bridge the entity API. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/643795982",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-643795982",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":643795982,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0Mzc5NTk4Mg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-14 17:20:06 UTC",
      "updated_at":"2020-06-14 17:20:26 UTC",
      "author_association":"MEMBER",
      "body":"Something else I am trying to figure out â€” it seems Iâ€™m not getting reactive updates for posh `pull`. ",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/647010595",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-647010595",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":647010595,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0NzAxMDU5NQ==",
      "user":{
        "login":"jelmerderonde",
        "id":2357145,
        "node_id":"MDQ6VXNlcjIzNTcxNDU=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jelmerderonde",
        "html_url":"https://github.com/jelmerderonde",
        "followers_url":"https://api.github.com/users/jelmerderonde/followers",
        "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
        "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
        "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
        "repos_url":"https://api.github.com/users/jelmerderonde/repos",
        "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-20 15:35:19 UTC",
      "updated_at":"2020-06-27 10:11:34 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Just a small update, didn't have much time last week to work on this unfortunately. I reworked the data browser, it is now much more extensible and uses `datafy` and `nav`.\r\n\r\nStill to do:\r\n- [x] Fix some bugs with the Reagent reactions\r\n- [x] Reimplement tuples view\r\n- [ ] Research other ways of implementing time-travel\r\n- [ ] Create a list/detail view for the transaction panel\r\n- [x] Implement `Datafiable` for transaction reports\r\n- [x] Make it into an actual panel you can trigger with a key combo\r\n\r\nLatest version (not fully usable yet) can be found at: https://jelmerderonde.github.io/athens/cards.html#!/athens.devcards.devtool. Load some real data, but you first have to click \"Transactions\" and then \"Query\" to get it to work.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/647106736",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-647106736",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":647106736,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY0NzEwNjczNg==",
      "user":{
        "login":"jelmerderonde",
        "id":2357145,
        "node_id":"MDQ6VXNlcjIzNTcxNDU=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jelmerderonde",
        "html_url":"https://github.com/jelmerderonde",
        "followers_url":"https://api.github.com/users/jelmerderonde/followers",
        "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
        "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
        "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
        "repos_url":"https://api.github.com/users/jelmerderonde/repos",
        "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-21 10:00:32 UTC",
      "updated_at":"2020-06-21 10:00:42 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Just added a draft PR #164 to show progress so far. Some things still to be done, but the major functionality seems to be there.",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/650536749",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-650536749",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":650536749,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MDUzNjc0OQ==",
      "user":{
        "login":"jelmerderonde",
        "id":2357145,
        "node_id":"MDQ6VXNlcjIzNTcxNDU=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/2357145?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/jelmerderonde",
        "html_url":"https://github.com/jelmerderonde",
        "followers_url":"https://api.github.com/users/jelmerderonde/followers",
        "following_url":"https://api.github.com/users/jelmerderonde/following{/other_user}",
        "gists_url":"https://api.github.com/users/jelmerderonde/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/jelmerderonde/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/jelmerderonde/subscriptions",
        "organizations_url":"https://api.github.com/users/jelmerderonde/orgs",
        "repos_url":"https://api.github.com/users/jelmerderonde/repos",
        "events_url":"https://api.github.com/users/jelmerderonde/events{/privacy}",
        "received_events_url":"https://api.github.com/users/jelmerderonde/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-06-27 10:14:16 UTC",
      "updated_at":"2020-06-27 10:15:01 UTC",
      "author_association":"CONTRIBUTOR",
      "body":"Another update!\r\nJust set PR #164 as \"ready-to-merge\". It still needs some work, but I think it is at a stage where it would benefit from some help from others as well.\r\n\r\nThe devtool-panel is implemented in the actual app and you can summon it with `ctrl-g`.\r\n\r\n# Still todo:\r\n- [ ] Research other ways of implementing time-travel\r\n- [ ] Create a better view for the transaction panel\r\n- [ ] Fix the styling (help wanted, because my css-fu is not so good)\r\n- [ ] Squash a bug with `navving` that seems to have returned lately",
      "performed_via_github_app":null
    },
    {
      "url":"https://api.github.com/repos/athensresearch/athens/issues/comments/653801606",
      "html_url":"https://github.com/athensresearch/athens/issues/139#issuecomment-653801606",
      "issue_url":"https://api.github.com/repos/athensresearch/athens/issues/139",
      "id":653801606,
      "node_id":"MDEyOklzc3VlQ29tbWVudDY1MzgwMTYwNg==",
      "user":{
        "login":"tangjeff0",
        "id":8952138,
        "node_id":"MDQ6VXNlcjg5NTIxMzg=",
        "avatar_url":"https://avatars1.githubusercontent.com/u/8952138?v=4",
        "gravatar_id":"",
        "url":"https://api.github.com/users/tangjeff0",
        "html_url":"https://github.com/tangjeff0",
        "followers_url":"https://api.github.com/users/tangjeff0/followers",
        "following_url":"https://api.github.com/users/tangjeff0/following{/other_user}",
        "gists_url":"https://api.github.com/users/tangjeff0/gists{/gist_id}",
        "starred_url":"https://api.github.com/users/tangjeff0/starred{/owner}{/repo}",
        "subscriptions_url":"https://api.github.com/users/tangjeff0/subscriptions",
        "organizations_url":"https://api.github.com/users/tangjeff0/orgs",
        "repos_url":"https://api.github.com/users/tangjeff0/repos",
        "events_url":"https://api.github.com/users/tangjeff0/events{/privacy}",
        "received_events_url":"https://api.github.com/users/tangjeff0/received_events",
        "type":"User",
        "site_admin":false
      },
      "created_at":"2020-07-04 19:16:48 UTC",
      "updated_at":"2020-07-04 19:16:48 UTC",
      "author_association":"MEMBER",
      "body":"@jelmerderonde I think this issue is amazing. We have time travel with `ctrl-z` and `ctrl-shift-z`. You are free to continue working on this, but I'm really happy with it right now. I think further improvements would make this its own library/open-source package ðŸ˜„ ",
      "performed_via_github_app":null
    }
  ]
}
