{
  "url":"https://api.github.com/repos/athensresearch/athens/pulls/comments/454020735",
  "pull_request_review_id":447698016,
  "id":454020735,
  "node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAyMDczNQ==",
  "diff_hunk":"@@ -221,7 +224,16 @@\n (defn on-change\n   [value uid]\n   ;; (prn \"ONCHANGE\" value)\n-  (dispatch [:transact [{:db/id [:block/uid uid] :block/string value :edit/time (now-ts)}]]))\n+  (dispatch [:transact [{:db/id [:block/uid uid] :block/string value :edit/time (now-ts)}]])\n+  ;; automatically add non-existent pages\n+  ;; TODO: delete pages that are no longer connected to anything else\n+  (parse/transform {:page-link (fn [& title]\n+                                 (if-not (db/search-exact-node-title (apply + title)) (let [uid (gen-block-uid)]",
  "path":"src/cljs/athens/views/blocks.cljs",
  "position":null,
  "original_position":54,
  "commit_id":"98a00d64c913aa39c1938b9ae7445a7757fca737",
  "original_commit_id":"57afcef730065e2aa5da50e9b824cf5719b6ae05",
  "user":{
    "login":"HaojiXu",
    "id":29003511,
    "node_id":"MDQ6VXNlcjI5MDAzNTEx",
    "avatar_url":"https://avatars3.githubusercontent.com/u/29003511?v=4",
    "gravatar_id":"",
    "url":"https://api.github.com/users/HaojiXu",
    "html_url":"https://github.com/HaojiXu",
    "followers_url":"https://api.github.com/users/HaojiXu/followers",
    "following_url":"https://api.github.com/users/HaojiXu/following{/other_user}",
    "gists_url":"https://api.github.com/users/HaojiXu/gists{/gist_id}",
    "starred_url":"https://api.github.com/users/HaojiXu/starred{/owner}{/repo}",
    "subscriptions_url":"https://api.github.com/users/HaojiXu/subscriptions",
    "organizations_url":"https://api.github.com/users/HaojiXu/orgs",
    "repos_url":"https://api.github.com/users/HaojiXu/repos",
    "events_url":"https://api.github.com/users/HaojiXu/events{/privacy}",
    "received_events_url":"https://api.github.com/users/HaojiXu/received_events",
    "type":"User",
    "site_admin":false
  },
  "body":"regarding the `+ apply` issue, because the nested page-link is processed recursively, `parse/transform` performs a leaf-first search which creates the page and returns the \"unparsed\" value of the `:page-link` node. For example, parsing `[[A[[B]]]]` would create a page named `B` but also returns `[[B]]` for its parent node to create (`A[[B]]`). `+ apply` is used to combine the list of children strings to the actual page name (a unique transformation).",
  "created_at":"2020-07-14 00:13:40 UTC",
  "updated_at":"2020-07-14 01:35:57 UTC",
  "html_url":"https://github.com/athensresearch/athens/pull/252#discussion_r454020735",
  "pull_request_url":"https://api.github.com/repos/athensresearch/athens/pulls/252",
  "author_association":"MEMBER",
  "_links":{
    "self":{
      "href":"https://api.github.com/repos/athensresearch/athens/pulls/comments/454020735"
    },
    "html":{
      "href":"https://github.com/athensresearch/athens/pull/252#discussion_r454020735"
    },
    "pull_request":{
      "href":"https://api.github.com/repos/athensresearch/athens/pulls/252"
    }
  },
  "start_line":null,
  "original_start_line":null,
  "start_side":null,
  "line":null,
  "original_line":231,
  "side":"RIGHT",
  "in_reply_to_id":454013280
}